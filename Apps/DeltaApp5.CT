<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <Forms>
    <FL Class="TCEForm" Encoding="Ascii85">=L7@6Th)/{PnIRic5r=m0R_BvkTj6QcG9q/K;QcSX]I,ZO47hesz{ea7FjaVa{ra2%um}-tX}8D2BRwww$d?a6*2R@GFaNJYt!(ED2(0?t^Jd439yBbLI{39d-d+;j.].M-jig/a[*f;]RYBrckcPS:bU?reIL%VAzx:{t/%?MqBR:pRa*E2,SM+iX))=}L*_?@^dHvbMf;dM+(G]}L9NGr%vRkP([dhP:4eEVMZ-;qS5wtkWm7a3RAZ_G)MY[qYD;sF5ZBb,HEN^ay)P3J6bbc*u2(H}%c}89Ri_r9,#8B=/G-5yeOf3QDL/:44Qu_!zCO;E0ndieoamf)H4.#)n![PAqNNC]*Z2[6M^[hBjXB,c?XDBfz@Cre,@v_l1@U.^KzL)MNK-2aX$xBXn%}^zvY^)6B4oq:4Gxk_51Na:ISYR]7bE[Pe3_?S2OA3Fe{hPZ1PKx)NRS^wf(;W=BuJ1TL4pJc5,q2FAVGoz2?+.UY!vMn%K,L9kUvMEzn4%tpaA)53z%+wlD+=v/}D*c(c=V5/JB0yjPY9-AHw*J#-{MhPQSYg/4qVhW4sdMxdNHnq%Mpb-[FZ^d@a1Tig6Fd+DxN#crs7=1HHyyW9-6sF^fijdM9D?/qmoN8H[hzd.#MLfgBSUhcJE$aEL=x+s$O[/k}MHeQDLa95hKNKG+=_%Q3FU[@d$YOpe1.[W9a;f=k7NkH5!1V%(hy3G}1(#WX78JM.4^j6E3t6UZn5=6wejo6!g6D-z(dzs4BCSOMsjdQco,5Ba!;?+2uwXcXn03x[zJ]whlxfRD1vF]+!vXR?D/?t-*k51(H0@Ek{u!Ot*+1Uevdh5W^O!nYeSegf:mJjvZi4[K@t6VPEf9,-nN]Z+KW^HgZy]Hl/Z=_.VV.rb?QIIknH663od(Q27]F8TZpqUd.]xdY1=-ow{ibU=-g#/CA[/9spV@g=a9kn0SAT%kwmK-L)4u*uMCSRgC%[gff$gz:jgBeZVNg7I;SO(G7j+p2aP7$3#;hM:yH=;GeGf/c*ZjEMCJ;=+,D4_8%kPHQtUjCHhTkWU/P5yopVK7#Rov*s=;c)6.xgc/SBt$E5m!R1}5MeD$]4Dv}^@S@e@KM_OUaSO*%oIe:OQwMH6(0_8:=]WQ}hrB1XKtE@aOy2w*z76D-5N)3/6a#%(LF4+-.uNR?k/)NM7)Y9JKTTM*dGhyBjN5=RjphXH$o!fBD07:2Mupe+QlDeh7bL+B9jDn=!1zbDD0m.p-_9I349KfR@RRXUo_5k-*8BrEA^j5HVRU5C2cv6OA$=5(FIO^tIZ1gim+dSuj]azU]LbUEyD]fzmPc+lY=7A@/YN[$=?8SKB+xb%(p!q;OX]b9kUqCS/]chxaUI4P0^b[++IJ.?X8Xj;,lTb_Of/oB0%kK]2V:e!J^^reC//q%3g98h;,Zw(y8=3m4;3N0)FevDMGz0L?tdqYdDUXy+m,-^.Nt-6+A+yp=$oU8^_BY#R2.xg[(LIMjK46b3k-37ghyBh90ER[(F%du(.vd]U@+{v*UD0x0K5Mc6I2ImKyJ?l81vaV=_=C}%%FBe/[ModBiC(dGG7Gen3+2DiE+^S:Rmnt)*xp09bh!;2mP}6K-:%NFg[,ge6(y=d(v9kD07Z+H0Fx/Io/}[RtxNv^e1=}+Q1(3FFPkZ!F(MI/7w1}pETk7p,8/JkUiw[6KHJb2#0{9lUQ/I7W(8;:G!LyT;_+JX%ol=Fkakb!5:a=YFT)o*?Hwg)sS)zG]4fRtRJK/yj)yh]?0F5Uzf)NdE+4{0kC#z+7lj}e/0ui@Y]b]ao9=XHCprh/ntpcXCocB$;cbY0I{{W3E%?+_05:4l;jz1i/7wx#Mdv61KIOB?BzkpPG?Z)Kip=;9GEDzVVIx2WU{v!m*9A?]Us5o/3aX3-K2groue1#y:MF$/IzhcZu?pH^#ohwD:2e4J-pTp/52dz-99R*/udvov@WklmT)-vXuij!%otC.$o-!2?v_V#OQ7,(=vM3RHR!^9kf$b0T/7i+l_QpvH%iZs4V$q2e-qd}]]l{;wtgy+$?KSG#)^?S@n;w)?UEf,/3QHeD:o)Se7=u7v!MiJ(*e:DTp!ryatk$)laz/0/@x3QdUExX%)Zv}V/*l?JC7$H?P9N/74[#u6a8U4yQKv40M[5/OxP[u[9XXPrtfVfBzs/VH+m6JpEsJY3(xjc4RmO^kNq[m51H[Fte?QmzW/=7?cnQ.5U%?A6!H2jo]JOhCc^M+^Kz57%TkE{@6BFcsG{;}oPik}$_qOPwYIES/G_%WpW)CX_6#$eEh-?(!0h*L3vn+tg#,j}vzfI.@!-q[2avu7n;,]w3hC;5zlZewK8odQm}X$$z@@?QVQjp+gkk[j/Di8x=lF!x;;76zvEIXUh^*Y#kYiq0#5_MzelKUctZ(.*@o/=6xrF4.WcYxE^)Xh)pOyI0iYy_4M!43$jEm8pD#Cr4_38RvlEAmMo45z#(.2Eo12P)*w(34[fcMN6iH-iY2;ze)?J?PNN0vB;:;VBqK3rhjkpQ2U0:.IsU1vdWpDrQ!Gv5Bfg8V-)h;@}wHGx88z@=yOAopA]G;b#NT7/EO;1]_Mp8_C3SdRWN]hQ+]?js.R6$@FW(k6W54.*Vvz/W{Qy{(}JY[*c2M+pr6[(2h4;Af8HfOBG}1att[x=i^8yB7:OzX%m4-ut^o-@uPzbmn-0I;3BKmq7kxjp#c$c+MScovS01g8bjGApd(6d*Cjz1?PXe^$?q}b5Q#E==UA-dhVahjlFGB^%?3,^K?C5CgjifdYQof7YNQPbROPH^MufG+pvDHFA3ydZKAft=*_DDR}[#/?VtfkPqRS(WbN$77Uj;bN7e?ByME4LA%8V1_22a6mb_9/sLA.6]4X*ETABN},Q2?3Z$bX-oa3B7$w(5:0l62t2N3yOBGB*-Xyh_SM+MlMgzCRm;YI$m1Kc;xbYP![I+idgl3AZs2I9V77s2.4nGzeHA+lZ{BJ+;:50[B;(-l2?LjCVSu7B,FFHQPjcKq9U?JZpu^KG_;b6}(!R_EcpEbwPn3D+C6O!SZO:tYBT[$]bf]vrA/v$PVw^_#jQ8UB29lHKzj3-a$N!TSGl3-LdxgPkX,k/QMMgTrS8:U5mc6}Iff_HBJ[-@E(I!t];zflo5C28bP7UPAugN[]XZ$.b7P,3;Sjd.sH++Mfb)7%T^AEav)TxOM_R%g63Z/^5LX1BSM7ZVAPIR(_^DxbGPF$$*_Ujph!]#CSDad_K;vrHr:w4EnUiLT;yLDm{0:#/6}qJsROWDO@YP78/!.h_P.JyRw.#?km_(x1)V5BHR5OCx2$YPg:.0^-T7(em)}9natnV?eKxfz=TK%@8uvK5$5uXa6B0l:,J0A3-(^fHuiau$,{jq[?NYPfHP2fPb4#a^Sn72:mUO)GS[Z4/lqaR*BhBW%@vdX]J]oBUl:X7nDB^k4f#1GRQnUff!^Z2Z:(@+?bemQZeI=c2:^0E0[Edq]g]7I-)wKVPC?B8KQs35Sc%4cu/x5JjscGg]po]+3LLlRu:z=+KN=1)_LhRli+yPncSh5I$$A!{@-oIB[w!:[S=BP!$yz$(.YtJhnVw{^2j:u-=*cwFA+avf@M{yLXLfBMA2ze54DJCjxkP/G=+n$3*O%PD6g;xOL+g{Da9%A2a[g}pP8^y%8y1X9Wn3,L$mAIE%?VeK-fxrI,)#yT0OOD7xi:%)vsm,}F@cg-vcD}h;^pwdQ))Ly]g:)UkNqO},-D+0Vm0[(]yVjgkY[j!j!{#!,Kc#h0i6oa%L69m(#w2}31Is=A1,1a+K.sFk-b{I8rT7A!#zR9YF]kzHlP;Sx:m2*HTx[9._W:FRy#p#pZ5WGT8sn8]q*[pykNX0dusd)GJgNdXua2q*Fhh;WM5^nzwn%UCy=!n;OsFVG4H_l:xyWXY)#tVv+SBZ]uV,L=ET7+?$g#rgB-8SApgACg6tDO-[I-Ym[L@f2.{gGj9:H(@Brj9e%p#cZJ,pxzXI[.uM1_@k-[J}.W4tO=@3}i]L?}p^]fv]oq*D48nb[Zvd](#AIP5BQyZ:QoNM57p;H7h#%:;(BYGFS:$-Fy^np:rx,L@RqWtqti+YF9!9Pq.yBEoSCWzOE)a5##Q(8qRdTs@B$:ux%paVuWNT7:5UVo1Cbyy#okOx[B?,OVJuSJ;ffDqX^*6c0O+83D$TeC^]yS#XU#eBKO0nxjEJ[fR7@EU7uu%CkbIG*8G6}WwqjmnbvZ!*Jw[VOqDP4(}d4OxRs+4cOjzqKRrJ0I9R$-4yqJCB,ZzyA4jc=S?]FD[f-*eX*eJUJq.CzyAWcW@D[#sFSUc9h?yHbuWvIJr-w?p=Xchnz0(^m3.I,;bKXIZOhzBBOa5$m/hS2Iq6{VVObB$iM3kBJ)4n[kO]Ko^TGGkJ;_d*+IP#Wq$^Fak^,:6h7y%i{JJ%W$x;3rdG]OPS)kN8]MsC]SJ1/p}C3}_IF1NA$:^%,j-hNwELf,)%jpz+gC,Tx!HvBo2yN5x-vxTK?pk/6dF(RO:*],Wv+w/XO4l%o.:r5bDG3@X2$]t(gJKve;[:$9x#6Y3h8riWDR]-)$].2p_/CsNS,%wgXSfFjPyN-$?2g_6XXo{*_F0xm[@E7JQh@a9KX/coS]gn[?@{ABK2FcR*g$4b@znMAPz0(JK+6Q.S.ovQubm$z^cj=s5t9)U?gzA-NO3N5Gs8C4?Uo8T$}_6;/3sLv;A:wvl(b.ASQ{?4]%aZ-Gg6HCzN2U1FSwko^_0}8oM:o#hxQ1(,X3;*T/=!uM-l!=Lg]EL+rEspxg/q+Mr:}F2$L5Ou%=_A,4A2@LnT9T[B;l.YVqXA+xGD$Ui1vzLPvx?r+zQLt_^}yzY[bRIf0gSweAr0Rgf^%ip5)nh#zV5:FLik/34$G%VxBEot,k8y7)SlJzp%Xsk7qBbPJ#^[kw;1R%#:pfSnJEcz+7@!0$B;mzHX$,Ka9kJ4+DiedYQ:rzf,1)$Mu-7e+R%Etv!Zbjyk$a6qs4aXfcF56FQe(jiv4]@-oL.Ck(dTc+E[s?^NR+k%OuG%0,m41GF;OwZTkerOv]p-oAoWnWv=?1tE%lFz6#$O%DiAK*nn*w}Ua,H0*cnRZQ2gcKNB#f:x$?.-Zkp4XBewrhg!TmJGC.M)L2mW6_Y1w:s=}R0eaGWo7prm3z0.FDioXhF0Ao)48j-)X#.5pspKNl6ghjS@ue?*6=hdD*+_0XGaY5!9GB[.n@VEq3y(lrHM2lUGEza+iM[eV0HLEb=zL*HOGG6y94g=$U?bMrs8h}#-)@4xEo%;5:rEufHVNV[jx]Lj72yG2xxT,1Orf(;W=BuJ1TL4pJc5,q2FAVGoz2?*hokRU.Vgc5=26B7/NGn(T^nhD!][6_EhbJ(eg:iYSt+q0D0Uzl#cJcy93GTkP-J*;Ev/]CJf3^?.:=Grj^H;WN*NSe0P1@4O4r=NJE,0R9,O/#I3g+Fqr@;*S0lv/D8E}6BmXh3MrF?zL*!^dWUX_OdQ8{0HR@z981dQ5L0M#$sXtst}fZ?-4n(d!R-2wlR,Q!YU0[6B6v,Yh5MOz}t7I,JoExpQLKZbUiaK}pdVN*Ia2$:!o4B@}{DawG^)H0Y{+uSN:MC+O:apSFhvZDge.I(09joVGhj,l{:0CrC+$z_nvnpzS?$=t56ftbw!?,CD,swi.amN0DogwmV:O4YD=U$:+*AeT:o,([caEMci*D,wYKthWO@VJtx)6*gUyRwP#}l(dqE*UQ4y#BkfDxA==dZ]ygp:Otz/_,K+,nZ8Ottay^GT+D_iJ;{;/;S.%qI=u?qU6HISVZy(;LH(M{,bpOsggg_;Ty5z2O^_Ub}wx#*X6stqkZrFAWJ[7iC0:aJS4W^LR//,zc$P2e.(nE3XDfvFs2IM[7h=;ZDneK+@eguhtr!akKK.Iz)y$C7GseWzJ#YOealYBcEx)k*vO!f74Le6ZeuO}ZgQ!zKNj:S}tPNiih+7q7TS#KXi$]+v08kqjSR+q@Kl%0djUJh5Grs*UM[Vhsw,1=YI,{Bd{SBB7?l;HHV-TVorfZFSDgRV}s@FVv[wu9RHNp^?GU.IjMuV)E-dix(MKC0VCN6OtLcOP{799{}AXE(!D,JmJ1m9*P+[!ETe*6=w{)-4{w8930U8dnqauLmn%o)_i][6^$EZR^aCGL9p)a5URTx%P/rkECyN#sD(52TEs0q(Xaot4;ATQPB{.QR7-HIzU@i*q$4i[K4Hr=NilYwYMj[eO1Kgk8f?A$DFRX**=OIABel#o7+=2v3MvNDR/T^Apg{mH-zG$En(3,P4YFb:!]_XV]?B)e;Q0}K68UV,@[oZt=J9#*h@Ax%U0f_hPrz,rN-]y[Sv6Aj+X$9*{sU}o1)Fx8q-?gS7$UH))rwhpv(jq)m?U;c/ipg[h^/Zv{mN-t7:+))yh1jtKXKo]fPG[rJ7#,YG/;+k6f,X/z3/Pty.U%TiF[oXbb4sM:Fx7wf/fepP[a}RnPiW=(Nn}Z6K@xmUqRQqT!(cE51teheH9BWM)L@*mcMW*fNh;l$@M]).rhK8u[s,O{Z13Ug[2RF_9=[*PSZFKF5IY**e6mudi^P($%Mv$Gi??ibcMAeP7V8sjDJgQ8D4fePF]d^ae*V8O^AMa!R_uFWFAguDBWL:O..DMoAw=kzPfA:E1+Prjyki4M)wF1.QIckzjOtMsMD:,=z[B@5jKbup5x{R*1W;dYF}:YbovVH0_[fBWSM)gj?RqJ?Jr#42ZWkw@RGMA+Cp1Cn=?QDLyAfvE5r_g30fX7M,X4bZ!(SS$][(Tr8y1em4;jx?fEk/veL6RzB9$@%gOz-AStVQ;yL9fa9!B8=jAn#7XC?@I/m/Td@/gIhQP3ykx:Rx}1d5g0m3LOgNk),,DW;lU{:@wzl=@8L-n@m-agL=.05K#VMN02*U:qI-K76EW}abZ@SM#CN@!)/AhpwiyGGafZ%6R;N]J4?K,hZ+QE$^UgBB0VChm5c6VS?XrAP*BhH68Bc1L$Q+:+G)*}1{]:T]6-a5_;9(bHobZgW_Kk.dh?DFnlZqZX?Qe3B#yu?aL/a$E#qOm7:k^8E/)O8@1XPx3)Qxu/;G]%Y+!Cx2_T7@f3CnBnkjEaU-Het6,J3!SVlh;)uc4;/8iY9{oDlcZ6C!3]!E+Owkus@7),^cCEUP@v#n+7u,QXzRNrY;)$xAgaSr-xs:?TQa7qd0j9g?c)%Ogbht%wgI*R)d?ht+u4R2C6Vgaqsq!7U*r9.)VYCb@*L754N@L;O(?_Z+1_jH,B{C]pP6V^$zw8Cf/:jyw_?=%@:;s59Q7u8#k.N9qN/h:,swrMAk)6/LZitrebGLQcPc^S7l$ftN2uB@+VK%8q,9c.trSVR?(+0sNpJ[p)Y!8f44I_x8I7A9j;Pxj/{of#lyN$Rt3UM^:nAmShPP9*DP%qDOH$seACo5D*lzKMw$#?bubGir3PPrEYd-B$B]MzIap}RZFSzx6*Renc^/h;z}_.3f23PY-rO,d1!aacsul_c.#ugta0H!hO6Tg%w*[dL*)NHe7n5qsC?ZW}^jqF;HjZTI$]y[4yhUMX@5$YHl=:0673u5OvXQxYB$:z$cCPmoMrM@xrha!ZopxC4a3=hc*Cy*}P-+]j3m;jZJBQVMJ/B^ezC2YaQUwtLAbBn$d0vvSH(Kc@D.mS0=np1bg43n;n@odwT#fx(*El}9b+1]as}d%wv$89]K7zR(4n/T]ohn/]xkewCm4(Q7jmiF8NBh(9R,P7P-s_yr?V{7q?/6y9yUz?_Umlf@B7/nXWTVUy6aB;$)Um(UBgn:K-:v1a9K+,eaJ]13OcN8nJw/pmBYXtujzD.w8XN//D;2:@7#@K*$msBDs!H;dlc_w;T9Wt)8]xa!Snr6MEA^p?^vArt*#;lnzd+2d.tlx2DsE!}i8V#B/La#/!=0HkuOn^6/!XufyVpd6s/SfKOH8NNuZ04f*}$[3RI#h6.8=DgqZF5r/v80*?%*T5(qaFP6z)5WJ-4s*)}$piTc#IZOF3Shb_/yDjPmfPctuB3%*gbEi)D3_6ex1hiA*A$6^^j4EghOE2@N^XsYhlBstO/5GJ}!,GlDLB+r5}d4un[6]}yC9hc;At,K/K7*Zf+m#=*X%mEOM_e,*.2(Z?=;-c[5M,i*DP!UwzV#Qwe}q-9Fzh/-+VNfDgxuD%WaSct@I]ZcfW$Nkj=oX*Q6uz7T886BUdH![KF8AS^!;D6;ZI:Z@[+Z}Y{=M#lrBzw9jd#/si1bNGR5?UFx/p1!12a{]5Jn:sN[T,aOaT:a#w=7i{1Y+(6,+3CPC!^#;32g0*h9X,EdwyeNz?x?uIIHzUW1dhv-mk[zF_^um);(WkeortI4?6??Pv?Fycf+FzTZ8vTF{ACbfO[HL]ufinp}[?:+h}jn/$8vq;.2s,e;gYEuSJw!][i6.o{WcK%%)afwL?St;2S?NoFnV,%RMVK$:ke5pOXxy;uNK()#bSx:TlSNRlLo*/zqIVGvzd@eCzzdP+j*B8F+}K/CVXc(Zp^RJ5pp%O[F@UC3^+rI(,xSCr2Y?emFnJ1TqXK^=n@P]zl24-/_9NsAs-[#C*#;6Pe@Er.[zmBl-Sgl#{nyX5t#K]y68dC=Wx+B}YC*%dYoE/+MM1vQ+]Q@rTi?ZLP[1Kpcj=U#O^D8@f#djgqx/Yjak$%W9JoKZOi:=}aC{vlecl^_5</FL>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"pointerscan result"</Description>
      <VariableType>Float</VariableType>
      <Address>"GTA5.exe"+02D5F6E8</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>2A5BB3C0000</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>364</ByteLength>
      <Address>2A519D58278</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>15</ByteLength>
      <Address>GTA5.exe+FE229A</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>188</ByteLength>
      <Address>1F095E71168</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>364</ByteLength>
      <Address>1F095E710B8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FDA90</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Last Check X"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAC8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Last Check Y"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAD0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Last Check Z"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAD8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAE0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FDAE8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAF0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Next Check X"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB50</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Next Check Y"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB58</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Next Check Z"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB60</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB68</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB70</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"CurCheck (ID=0)"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FD6C0+11568</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430EC28</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E43052A8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"ID = 1"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430F280</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FD6C0+11880</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"ID = 5"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FD6C0+13520</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430FF30</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"ID = 2"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430F8D8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E430F348</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"No description"</Description>
      <VariableType>Float</VariableType>
      <Address>GTA5.exe+20DC470</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"No description"</Description>
      <VariableType>Float</VariableType>
      <Address>GTA5.exe+20F2364</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"SteamSpeed"</Description>
      <VariableType>Float</VariableType>
      <Address>GTA5.exe+264F684</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>String</VariableType>
      <Length>8</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>14100253998</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>14100253998-A9610+97C60</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>56</ByteLength>
      <Address>14100170000</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>14100170000+D16C0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>141002416C0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"CurLapMils"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>1413115EB00</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"TimesPTR"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>62</ByteLength>
      <Address>1413115ED50</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>PlayerCountPTR</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>141311663B0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>14131170580</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>22A20F85518+11550</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>22A20F96A70</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>--DELTA APP ERROR
openProcess'GTA5.exe'
autoAssemble([[
unregistersymbol(adr)
unregistersymbol(TimesPTR)]])
FL.InitPanel.Visible=true
form_show(FL)
markMyRid = -1
LoadedTime = false
ADR = 0
Metrics = 1
SpeedStatus = 1
Gears = 1
Inputs = 1

function InitOffsets()
  pCNetPlayerInfo = 0xA0 -- A0 98 A8
  pCNetPed = 0x248 -- 1E8 1E0 1F0
  oNumPlayers = 0x170 -- 180 178 188
  oRid = 0x30 -- 090 088 098
  pCPed = 0x8 -- 8 0 10
  pCPlayerInfo = 0x10A8 -- 10A8 10A0 10B0
  oCurCheck = 0x11578   --11558 --11830  11110 0x10F48 --119C8 tomo | 11568
  oCurLap = 0x11570   --11828  118280 11108 x10F40 --119C0 tomo | 11560
end

InitOffsets()

--Check player ID

function GetPTRs()
  autoAssemble([[
  aobscanmodule(WorldPTR,GTA5.exe,48 8B 05 ? ? ? ? 45 ? ? ? ? 48 8B 48 08 48 85 C9 74 07)
  registersymbol(WorldPTR)
  aobscanmodule(PlayerCountPTR,GTA5.exe,48 8B 0D ? ? ? ? E8 ? ? ? ? 48 8B C8 E8 ? ? ? ? 48 8B CF)
  registersymbol(PlayerCountPTR)
  aobscanmodule(UnkPTR,GTA5.exe,48 39 3D ? ? ? ? 75 2D)
  registerSymbol(UnkPTR)
  ]])
  addr=getAddress("WorldPTR")
  addr=addr+readInteger(addr+3)+7
  unregisterSymbol("WorldPTR")
  registerSymbol("WorldPTR", addr, true)
  WorldPTR = readQword("WorldPTR")

  addr=getAddress("PlayerCountPTR")
  addr=addr+readInteger(addr+3)+7
  unregisterSymbol("PlayerCountPTR")
  registerSymbol("PlayerCountPTR", addr, true)
  WorldPTR = readQword("PlayerCountPTR")

  UnkPTR=getAddress('UnkPTR') UnkPTR = UnkPTR + readInteger(UnkPTR + 3) + 7
  unregisterSymbol('UnkPTR') registerSymbol('UnkPTR',UnkPTR,true)
  UNK = readQword("UnkPTR")
  end

  function mark_MYRid()
  local contest = getAddressSafe('WorldPTR')

  local ridaddr = "[[[WorldPTR]+pCPed]+pCPlayerInfo]+oRid"

  local testy = readPointer(ridaddr)

  if not testy then
  else
    markMyRid = testy
  end
end

function FoundMyCurrentID()
  local CNetworkPlayerMgr=readPointer("PlayerCountPTR")
  if markMyRid == -1 then mark_MYRid() end
  --Never use goto kids. This isn't my function.
  for i=0,32,1 do
    local CNetGamePlayer = readPointer(CNetworkPlayerMgr + oNumPlayers + (i*8))
    if not CNetGamePlayer then
      goto continue
    end
    local CPlayerInfo = readPointer(CNetGamePlayer + pCNetPlayerInfo)
    if not CPlayerInfo then
      goto continue
    end
    local CPed = readPointer(CPlayerInfo + pCNetPed)
    if not CPed or CPed == 0 then
      goto continue
    end
    local ORGRid = readPointer(CPlayerInfo + oRid)
    if ORGRid == markMyRid then
      MyIDNumber = i
      goto found
    end
    ::continue::
  end
  ::found::
end

function Fetch()
  GetPTRs()
  FoundMyCurrentID()
end

function ActivateApp()
  FL.Enable.Caption = "Activating app"
  FL.InitPanel.Enabled=false
  FL.InitPanel.Visible=false
  FL.StartDetect.Enabled=true
  NewCheckpoint=true
  NewSector=true
  DeltaMils=1
  FirstLap=true
  Enable=false
  LogsEnabled=false
  FL.FormStyle = 'fsSystemStayOnTop'
  Speed = createTimer(nil, false)
  timer_onTimer(Speed, ReadSpeed)
  timer_setInterval(Speed, 50)
  timer_setEnabled(Speed, true)

  previousKersValue = nil
  kersGainedOnLap = 0
  kersUsedOnLap = 0

  Kers = createTimer(nil, false)
  timer_onTimer(Kers, ReadKers)
  timer_setInterval(Kers, 50)
  timer_setEnabled(Kers, true)

  Pit = createTimer(nil, false)
  timer_onTimer(Pit, checkPitDeltaValue)
  timer_setInterval(Pit, 50)
  timer_setEnabled(Pit, true)
end


function InitTrackInfo()
  --Build Sectors
  S1_raw=0
  S2_raw=0
  S3_raw=0
  MaxCheckpoints = readInteger('adr + D3618') --old CBF40 new D 16C0 del prev 97C60 928
  local Track_Name = readString('adr + E5AF0')
  FL.Caption = Track_Name.." DeltaApp by Vi'o'lence"
  CurLapLastCheckpointTime = 0
  LastCheckpoint = 100
  CurrentLapSectors = {}
  FastLapSectors = {}
  if LoadedTime == false then
    for i=0,MaxCheckpoints-1 do
      CurrentLapSectors[i]=0
      FastLapSectors[i]=10000000
    end
    LatestFastLapSectors=10000000
  else
    for i=0,MaxCheckpoints-1 do
      CurrentLapSectors[i]=0
    end
    LatestFastLapSectors=FastLapSectors[0]
    FirstLap=false
  end
  S1 = MaxCheckpoints//3
  S2 = S1 + MaxCheckpoints//3
  S3 = 0
  Fetch()
end

function CloseToTheEnd()
  if CurCheckpoint==MaxCheckpoints-1 and CurLapMils&gt;1000 then
    if NewCheckpoint==true then
      CurrentLapSectors[MaxCheckpoints-1]=CurLapMils
      NewCheckpoint=false
      CanWrite=true
    end
    CurLapLastCheckpointTime=CurLapMils
  end
end

--CloseToTheEnd
function NewC()
  if NewCheckpoint==true and CurCheckpoint&gt;0 then
    if CurCheckpoint ~= MaxCheckpoints-1 then
      CurrentLapSectors[CurCheckpoint]=CurLapMils
      NewCheckpoint=false
    else
      CloseToTheEnd()
    end
    LastCheckpoint=CurCheckpoint
  end
end

--NewC
function Drive()
  if LastCheckpoint ~= CurCheckpoint then
    NewCheckpoint = true
    NewSector=true
    NewC()
  end
end

function NewLapProcedure()
  if CurCheckpoint == 0 and LastCheckpoint ~= 0 and CurLapLastCheckpointTime ~= 0 then
    CurrentLapSectors[0] = CurLapLastCheckpointTime
    --LOGS
    if LogsEnabled == true and CanWrite==true then
      --Record laptime
      LogsLaptime = CurLapLastCheckpointTime
      --Record Sectors
      LogsSector1 = S1_raw
      LogsSector2 = S2_raw
      LogsSector3 = CurLapLastCheckpointTime-S1_raw-S2_raw
      --RecordLap
      CurrentLap = readInteger(ChecksPTR + oCurLap) -- + (MyIDNumber*0x670))
      LogsLap = CurrentLap - 1
      local SpeedTrap = GetSpeed()
      -- same for sectors here
      --LogArray=LogArray.."Lap №"..LogsLap..": Lap time - "..LogsLaptime.."\n".." With sectors: S1-"..LogsSector1.." S2-"..LogsSector2.." S3-"..LogsSector3.."\n"
      LogArray = LogArray..LogsLap..", "..LogsLaptime..", "..SpeedTrap..", "..((SpeedTrap/1.6)*10//1/10)..", "..TopSpeed..", "..((TopSpeed/1.6)*10//1/10)..", "..AvgSpeed..", "..((AvgSpeed/1.6)*10//1/10)..", "..LogsSector1..", "..LogsSector2..", "..LogsSector3..", "..kersGainedOnLap..", "..kersUsedOnLap.."\n"
      TopSpeed = 0
      AvgSpeed = nil
      previousKersValue = nil
      kersGainedOnLap = 0
      kersUsedOnLap = 0
      CanWrite = false
    end
      --LOGS
    FirstLap = false
    if CurrentLapSectors[0] &lt; FastLapSectors[0] then
      LatestFastLapSectors = FastLapSectors[0]
      for i=0,MaxCheckpoints-1 do
        FastLapSectors[i] = CurrentLapSectors[i]
      end
    end
  end
end

function UpdateInfo()

  if Enable == true then
    Enable = false
    FL.StartDetect.Caption='START'
    if LogsEnabled ==true then
      PackLogs()
      LogsSwitcher()
    end
    LoadedTime = false
    FL.LoadFLButton.Enabled = false
    FL.LogBuildingButton.Enabled = false
    FL.Caption = "DeltaApp by Vi'o'lence"
  elseif Enable == false then
    UpdateCar()
    InitTrackInfo()
    Enable = true
    FL.StartDetect.Caption='STOP'
    ChecksPTR = getAddress('TimesPTR')
    ForLogs_TrackName=readString('adr + E5AF0') --new E3998 del 3A388 prev A9610
    if LogsEnabled == true then
      CanWrite=false
    end
    LogArray=''
    TopSpeed=0
    AvgSpeed=nil
    previousKersValue = nil
    kersGainedOnLap = 0
    kersUsedOnLap = 0
    FL.LogBuildingButton.Enabled = true
    FL.SaveFLButton.Enabled = true
    FL.LoadFLButton.Enabled = true
  end

  local timer_ps = createTimer()
  timer_ps.Interval = 1
  timer_ps.OnTimer =
  function (ps)

    if Enable == true then
      --Take values
      CurLapMils = readInteger('TimesPTR - 250') --3D0 basic
      --FastLapMils = readInteger('TimesPTR + 11228') --EA10 E960
      CurCheckpoint = readInteger(ChecksPTR + oCurCheck) -- + (MyIDNumber*0x670)) --7598 74E8
      --print(CurCheckpoint)
      FL.LapProgress.Position=(((CurCheckpoint)*100)/MaxCheckpoints)

      --Checks
      Drive()
      CloseToTheEnd()
      NewLapProcedure()
      checkPitDeltaValue()
      --Display
      if FirstLap==false then

        if CurCheckpoint==0 then
          DeltaMils=CurrentLapSectors[0]-LatestFastLapSectors
        else
          DeltaMils=CurrentLapSectors[CurCheckpoint]-FastLapSectors[CurCheckpoint]
        end

        if DeltaMils&gt;9999 then

          FL.DeltaLabel.Caption="+ 9.999"
          FL.DeltaLabel.Font.Color=clRed

        elseif DeltaMils&gt;0 then

          if (DeltaMils-1000*(DeltaMils//1000))&lt;10 then
            FL.DeltaLabel.Caption='+'..(DeltaMils//1000)..'.00'..(DeltaMils-1000*(DeltaMils//1000))
          elseif (DeltaMils-1000*(DeltaMils//1000))&lt;100 then
            FL.DeltaLabel.Caption='+'..(DeltaMils//1000)..'.0'..(DeltaMils-1000*(DeltaMils//1000))
          else
            FL.DeltaLabel.Caption='+'..(DeltaMils//1000)..'.'..(DeltaMils-1000*(DeltaMils//1000))
          end
          FL.DeltaLabel.Font.Color=clRed

        elseif DeltaMils&lt;-9999 then

          FL.DeltaLabel.Caption="- 9.999"
          FL.DeltaLabel.Font.Color=clLime

        elseif DeltaMils&lt;0 then

          DeltaMils=DeltaMils*(-1)
          if (DeltaMils-1000*(DeltaMils//1000))&lt;10 then
            FL.DeltaLabel.Caption='-'..(DeltaMils//1000)..'.00'..(DeltaMils-1000*(DeltaMils//1000))
          elseif (DeltaMils-1000*(DeltaMils//1000))&lt;100 then
            FL.DeltaLabel.Caption='-'..(DeltaMils//1000)..'.0'..(DeltaMils-1000*(DeltaMils//1000))
          else
            FL.DeltaLabel.Caption='-'..(DeltaMils//1000)..'.'..(DeltaMils-1000*(DeltaMils//1000))
          end
          FL.DeltaLabel.Font.Color=clLime

        elseif DeltaMils==0 then
          FL.DeltaLabel.Caption="0.000"
          FL.DeltaLabel.Font.Color=clWhite

        end
      end

      --If you read this and trying to understand it, know... you are awesome

      --FREEZE Last Lap
      if CurCheckpoint~=0 then

        local TimeStamp=FastLapSectors[0]

        --Display laptime info
        CalcMins = CurLapMils//60000
        CalcSec = (CurLapMils - (60000*CalcMins))//1000
        CalcMils = (CurLapMils - (CalcMins*60000) - (CalcSec*1000))
        if CalcMils&lt;10 then
          FL.CurrentLapValue.Caption=CalcMins..':'..CalcSec..'.00'..CalcMils
        elseif CalcMils&lt;100 then
          FL.CurrentLapValue.Caption=CalcMins..':'..CalcSec..'.0'..CalcMils
        else
          FL.CurrentLapValue.Caption=CalcMins..':'..CalcSec..'.'..CalcMils
        end

        FCalcMins = TimeStamp//60000
        FCalcSec = (TimeStamp - (60000*FCalcMins))//1000
        FCalcMils = (TimeStamp - 60000*FCalcMins - 1000*FCalcSec)
        if FCalcMils&lt;10 then
          FL.FastestLapValue.Caption=FCalcMins..':'..FCalcSec..'.00'..FCalcMils
        elseif FCalcMils&lt;100 then
          FL.FastestLapValue.Caption=FCalcMins..':'..FCalcSec..'.0'..FCalcMils
        else
          FL.FastestLapValue.Caption=FCalcMins..':'..FCalcSec..'.'..FCalcMils
        end

      elseif CurCheckpoint==0 then

        --NewLapProcedure()
        local TimeStamp=FastLapSectors[0]
        CalculateMins = CurLapLastCheckpointTime//60000
        CalculateSec = (CurLapLastCheckpointTime - (60000*CalculateMins))//1000
        CalculateMils = (CurLapLastCheckpointTime - 60000*CalculateMins - 1000*CalculateSec)
        if CalculateMils&lt;10 then
          FL.CurrentLapValue.Caption=CalculateMins..':'..CalculateSec..'.00'..CalculateMils
        elseif CalculateMils&lt;100 then
          FL.CurrentLapValue.Caption=CalculateMins..':'..CalculateSec..'.0'..CalculateMils
        else
          FL.CurrentLapValue.Caption=CalculateMins..':'..CalculateSec..'.'..CalculateMils
        end

        FCalculateMins = TimeStamp//60000
        FCalculateSec = (TimeStamp - (60000*FCalculateMins))//1000
        FCalculateMils = (TimeStamp - 60000*FCalculateMins - 1000*FCalculateSec)
        if FCalculateMils&lt;10 then
          FL.FastestLapValue.Caption=FCalculateMins..':'..FCalculateSec..'.00'..FCalculateMils
        elseif FCalculateMils&lt;100 then
          FL.FastestLapValue.Caption=FCalculateMins..':'..FCalculateSec..'.0'..FCalculateMils
        else
          FL.FastestLapValue.Caption=FCalculateMins..':'..FCalculateSec..'.'..FCalculateMils
        end

      end

      --Detect Sector's marks
      local TimeSectors=CurLapMils
      if CurCheckpoint == S1 and NewSector==true then
        S1_raw = TimeSectors
        if S3_raw ~= 0 then
          S2_raw=0
          S3_raw=0
        end
        NewSector=false
      elseif CurCheckpoint == S2 and NewSector==true then
        S2_raw = TimeSectors - S1_raw
        NewSector=false
      elseif CurCheckpoint == 0 and S2_raw ~= 0 and S1_raw ~= 0 and NewSector==true then
        S3_raw = CurLapLastCheckpointTime - S1_raw - S2_raw
        NewSector=false
      end

      --Convert milis in time for Sectors
      S1_sec = S1_raw//1000
      S1_mil = S1_raw - 1000*S1_sec

      S2_sec = S2_raw//1000
      S2_mil = S2_raw - 1000*S2_sec

      S3_sec = S3_raw//1000
      S3_mil = S3_raw - 1000*S3_sec

      --Display Sector info

      if S1_mil&lt;10 then
        FL.S1Label.Caption=S1_sec..'.00'..S1_mil
        if S1_mil&lt;100 then
          FL.S1Label.Caption=S1_sec..'.0'..S1_mil
        end
      else
        FL.S1Label.Caption=S1_sec..'.'..S1_mil
      end

      if S2_mil&lt;10 then
        FL.S2Label.Caption=S2_sec..'.00'..S2_mil
        if S2_mil&lt;100 then
          FL.S2Label.Caption=S2_sec..'.0'..S2_mil
        end
      else
        FL.S2Label.Caption=S2_sec..'.'..S2_mil
      end

      if S3_mil&lt;10 then
        FL.S3Label.Caption=S3_sec..'.00'..S3_mil
        if S3_mil&lt;100 then
          FL.S3Label.Caption=S3_sec..'.0'..S3_mil
        end
      else
        FL.S3Label.Caption=S3_sec..'.'..S3_mil
      end

    end
  end
end

--STARTUP FUNCS

function FindAdr()
  FL.Enable.Caption = "Scanning memory 1/3"
  local results = AOBScan('02 00 00 00 ?? 0? 00 00 FF FF FF FF 00 00 00 00 00 00 00 00 ?? 0? 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ?? 0? 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00', '*X*C*W', 2, '000')
  assert(results, 'aobscan failed')
  local addr = results[0]
  results.destroy()
  registerSymbol('adr',addr)
end

function FindTimes()
  FL.Enable.Caption = "Scanning memory 2/3"
  local results = AOBScan('FF FF FF FF 00 00 00 00 00 00 00 00 ?? 0? 00 00 08 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 EC FF FF FF ?? 0?', '-X-C+W', 2, '8')
  assert(results, 'aobscan failed')
  local addr = results[0]
  results.destroy()
  registerSymbol('TimesPTR',addr)
end

function FindCar()
  FL.Enable.Caption = "Scanning memory 3/3"
  autoAssemble([[
  aobscanmodule(WorldPTR,GTA5.exe,48 8B 05 ? ? ? ? 45 ? ? ? ? 48 8B 48 08 48 85 C9 74 07)
  registersymbol(WorldPTR)
  ]])
  addr=getAddress("WorldPTR")
  addr=addr+readInteger(addr+3)+7
  unregisterSymbol("WorldPTR")
  registerSymbol("WorldPTR", addr, true)
  PTR = readQword("WorldPTR")
  --CarNameADR = getAddress("[[[PTR+8]+D10]+20]+298")
  --CarNameCurrent = readString(CarNameADR)
  --284EA541160
end

function UpdateCar()
  if CarNameCurrent ~= readString(CarNameADR) then CarNameCurrent = readString(CarNameADR) end
end

function LogsSwitcher()
  if LogsEnabled == false then
    LogsEnabled=true
    FL.LogBuildingButton.Caption = 'LOGS ON'
    LastElement = 100
  else
    LogsEnabled=false
    FL.LogBuildingButton.Caption = 'LOGS OFF'
  end
end

function PackLogs()
  local ForLogs_TrackName = readString('adr + E5AF0')
  local save_dialog = createSaveDialog(self)
  save_dialog.InitalDir = os.getenv('%USERPROFILE%')
  if save_dialog.execute() then
    local s=(save_dialog.FileName..'.csv')
    file = io.open(s, "a+")
    CurrentDate=os.date("%x")
    file:write(ForLogs_TrackName.."\n")
    file:write(CurrentDate.."\n")
    file:write("Lap, Laptime, Speed_S/F(KPH), Speed_S/F(MPH), TopSpeed(KPH), TopSpeed(MPH), AverageSpeed(KPH), AverageSpeed(MPH), S1, S2, S3, KersGained, KersUsed".."\n")
    file:write(LogArray)
    file:close()
  end
end

function ShowTime()
       local TimeStamp=FastLapSectors[0]
        local FMins = TimeStamp//60000
        FSec = (TimeStamp - (60000*FMins))//1000
        FMils = (TimeStamp - 60000*FMins - 1000*FSec)
        if FMils&lt;10 then
          FL.SaveFLButton.Caption=FMins..':'..FSec..'.00'..FMils
        elseif FMils&lt;100 then
          FL.SaveFLButton.Caption=FMins..':'..FSec..'.0'..FMils
        else
          FL.SaveFLButton.Caption=FMins..':'..FSec..'.'..FMils
        end
end

function RevertCaption()
         FL.SaveFLButton.Caption="SAVE LAP"
end

function SaveFastLap()
  local FLdata = ""
  for i=0,MaxCheckpoints-1 do
      FLdata = FLdata..FastLapSectors[i].."\n"
  end
  local TrackName = readString('adr + E5AF0')
  local save_dialog = createSaveDialog(self)
  save_dialog.InitalDir = os.getenv('%USERPROFILE%')
  if save_dialog.execute() then
    local s=(save_dialog.FileName..'.HOTLAP')
    file = io.open(s, "a+")
    CurrentDate=os.date("%x")
    file:write(TrackName..'\n')
    file:write(FLdata..'\n')
    file:close()
  end
end

function TestFL()
  local FLdata = ""
  for i=0,MaxCheckpoints-1 do
      FLdata = FLdata .. tostring(FastLapSectors[i]).."\n"
  end
  print(FLdata)
end

function LoadFastLap()
     load_dialog = createOpenDialog(self)
     load_dialog.InitalDir = os.getenv('%USERPROFILE%')
     if load_dialog.execute() then
     file = io.open(load_dialog.FileName, "r")
     local Track = tostring(file:read())
     if Track == readString('adr + E5AF0') then
        for i=0,MaxCheckpoints-1 do
            FastLapSectors[i] = tonumber(file:read())
        end
     LoadedTime = true
     end
     end
end

function Startup()
  --StartHotkey = createHotkey(UpdateInfo,VK_DOWN)
  FL.Enable.Enabled = false
  FindAdr()
  FindTimes()
  FindCar()
  ActivateApp()
  if FL.SteamVersion.Checked == true then ADR = 0 end
  if FL.NonSteamVersion.Checked == true then ADR = 1 end
end

function RescanUNK()
    if UNK ~= readQword("UnkPTR") then
      autoAssemble([[
        aobscanmodule(UnkPTR,GTA5.exe,48 39 3D ? ? ? ? 75 2D)
        registerSymbol(UnkPTR)
      ]])
      UnkPTR=getAddress('UnkPTR') UnkPTR=UnkPTR+readInteger(UnkPTR+3)+7
      unregisterSymbol('UnkPTR') registerSymbol('UnkPTR',UnkPTR,true)
      UNK = readQword("UnkPTR")
    end
end

function ShowHideSettings()
  if FL.SettingPanel.Visible == true then
     FL.SettingPanel.Visible = false
     FL.SettingPanel.Enable = false
  else
     FL.SettingPanel.Visible = true
     FL.SettingPanel.Enable = true
  end
end

function ChangeMetrics()
  if Metrics == 1 then
     Metrics = 0
     FL.MetricsTurnOn.Caption = "SPEED: MPH"
  elseif Metrics == 0 then
     Metrics = 1
     FL.MetricsTurnOn.Caption = "SPEED: KPH"
  end
end

function ChangeSpeed()
  if SpeedStatus == 1 then
     SpeedStatus = 0
     FL.SpeedTurnOn.Caption = "SPEED: OFF"
     FL.SpeedLabel.Visible = false
  elseif SpeedStatus == 0 then
     SpeedStatus = 1
     FL.SpeedTurnOn.Caption = "SPEED: ON"
     FL.SpeedLabel.Visible = true
  end
end

function ChangeGears()
  if Gears == 1 then
     Gears = 0
     FL.GearsTurnOn.Caption = "GEARS: OFF"
     FL.GearLabel.Visible = false
  elseif Gears == 0 then
     Gears = 1
     FL.GearsTurnOn.Caption = "GEARS: ON"
     FL.GearLabel.Visible = true
  end
end

function ChangeInputs()
  if Inputs == 1 then
     Inputs = 0
     FL.InputsTurnOn.Caption = "INPUT: OFF"
     FL.Gas.Visible = false
     FL.Brake.Visible = false
     FL.Steer.Visible = false
  elseif Inputs == 0 then
     Inputs = 1
     FL.InputsTurnOn.Caption = "INPUT: ON"
     FL.Gas.Visible = true
     FL.Brake.Visible = true
     FL.Steer.Visible = true
  end
end

-- Not used?
function GetKers()
  if ADR == 0 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Speed ~= nil then
      Kers = Kers * 10 //1 /10
      return Kers
    end
  elseif ADR == 1 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Speed ~= nil then
      Kers = Kers * 10 //1 /10
      return Kers
    end
  end
end

function storeGainedKers(value)
  kersGainedOnLap = kersGainedOnLap + value  -- On new lap set value to 0
end

function storeUsedKers(value)
  kersUsedOnLap = kersUsedOnLap + value  -- On new lap set value to 0
end

function defineKersDirection(valuePrv, valueCur)
  if valuePrv &gt; valueCur then storeUsedKers(valuePrv - valueCur)
  elseif valuePrv &lt; valueCur then storeGainedKers(valueCur - valuePrv)
  end
end

function ReadKers()
  local Kers = 0
  if ADR == 0 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Kers ~= nil then
      Kers = Kers * 10 //1 /10
      FL.KersValueTest2.Position = Kers
      FL.KersValueTest.Caption = math.floor(Kers)
      if LogsEnabled == true and Enable == true then
        if previousKersValue ~= nil and previousKersValue ~= Kers then
          defineKersDirection(previousKersValue, Kers)
        end
      end
      previousKersValue = Kers
    end
  elseif ADR == 1 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Kers ~= nil then
      Kers = Kers * 10 //1 /10
      FL.KersValueTest2.Position = Kers
      FL.KersValueTest.Caption = math.floor(Kers)
      if LogsEnabled == true and Enable == true then
        if previousKersValue ~= nil and previousKersValue ~= Kers then
          defineKersDirection(previousKersValue, Kers)
        end
      end
      previousKersValue = Kers
    end
  end
end

function GetSpeed()
   if ADR == 0 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            return Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             return Speed
         end
       end
    elseif ADR == 1 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            return Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             return Speed
         end
       end
    end
end

function ReadSpeed()
  local Speed = 0
  if SpeedStatus == 1 then
    if ADR == 0 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            FL.SpeedLabel.Caption = "Kph: "..Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             FL.SpeedLabel.Caption = "Mph: "..Speed
         end
         if LogsEnabled == true and Enable == true then
           if Speed &gt; TopSpeed  then TopSpeed = Speed end
           if AvgSpeed == nil then AvgSpeed = Speed
           else AvgSpeed = ((AvgSpeed + Speed)/2)*10//1/10
           end
         end
       end
    elseif ADR == 1 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            FL.SpeedLabel.Caption = "Kph: "..Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             FL.SpeedLabel.Caption = "Mph: "..Speed
         end
         if LogsEnabled == true and Enable == true then
           if Speed &gt; TopSpeed  then TopSpeed = Speed end
           if AvgSpeed == nil then AvgSpeed = Speed
           else AvgSpeed = ((AvgSpeed + Speed)/2)*10//1/10
           end
         end
       end
    end
  end

  if Gears == 1 then
     RescanUNK()
     local RPM = readFloat("UNK+E50")
     local Gear = readInteger("UNK+FD4")
     if Gear and RPM then
        if Gear == 0 then FL.GearLabel.Caption = "N" end
        if Gear == 0 and Speed &lt; 0 then FL.GearLabel.Caption = "R" end
        if Gear &gt; 0 then FL.GearLabel.Caption = Gear end
        if RPM &gt; 0.5 then FL.RPM1.Visible = true
           if RPM &gt; 0.7 then FL.RPM2.Visible = true
              if RPM &gt; 0.8 then FL.RPM3.Visible = true
                 if RPM &gt; 0.9 then FL.RPM4.Visible = true
                   if RPM &gt; 0.96 then FL.GearLabel.Font.Color = clRed
                   else FL.GearLabel.Font.Color = clWhite
                   end
                 else FL.RPM4.Visible = false
                 end
              else
                  FL.RPM3.Visible = false
                  FL.RPM4.Visible = false
              end
           else
             FL.RPM2.Visible = false
             FL.RPM3.Visible = false
             FL.RPM4.Visible = false
           end
        else
          FL.RPM1.Visible = false
          FL.RPM2.Visible = false
          FL.RPM3.Visible = false
          FL.RPM4.Visible = false
        end
     end
  else
    FL.RPM1.Visible = false
    FL.RPM2.Visible = false
    FL.RPM3.Visible = false
  end

  if Inputs == 1 then
     local SteerPos = readFloat("UNK+CA8")
     local BrakePos = readFloat("GTA5.exe+25E79BC")
     local ThrottlePos = readFloat("GTA5.exe+25E7974")
     if SteerPos ~= nil then
       if SteerPos &lt; 0 then
          FL.Steer.Position = (((SteerPos * (-1) *50) + 50) // 1)
       elseif SteerPos &gt; 0 then
              FL.Steer.Position = ((50 - (SteerPos *50)) // 1)
       else
           FL.Steer.Position = 50
       end
     end
     FL.Brake.Caption = math.floor(BrakePos * 100)
     FL.Gas.Caption = math.floor(ThrottlePos * 100)
  end
end

local startTime = 0
local pitEntry = 0
local pitExit = 0
local isPitEntrySet = false

function getPitEntry()
  if isPitEntrySet == false then
    pitEntry = CurLapMils
    isPitEntrySet = true
  end
end

function getPitExit()
  if isPitEntrySet == true then
    pitExit = CurLapMils
    pitExitTime = startTime
    isPitEntrySet = false
  end
end

function startPitDelta()
  startTime = CurLapMils - pitEntry
  CalcSec = startTime//1000
  CalcMils = (startTime - (CalcSec*1000))
  if CalcMils&lt;10 then
    FL.PitDeltaValue.Caption=CalcSec..'.00'..CalcMils
  elseif CalcMils&lt;100 then
    FL.PitDeltaValue.Caption=CalcSec..'.0'..CalcMils
  else
    FL.PitDeltaValue.Caption=CalcSec..'.'..CalcMils
  end
end

function stopPitDelta()
    CalcSec = pitExitTime//1000
    CalcMils = (pitExitTime - (CalcSec*1000))
    if CalcMils&lt;10 then
      FL.PitDeltaValue.Caption=CalcSec..'.00'..CalcMils
    elseif CalcMils&lt;100 then
      FL.PitDeltaValue.Caption=CalcSec..'.0'..CalcMils
    else
      FL.PitDeltaValue.Caption=CalcSec..'.'..CalcMils
    end
end

function checkPitDeltaValue()
  local inPit = readInteger("GTA5.exe+2A320D0")

  if Enable == true then
    if inPit == 1 then
      FL.CurrentLapValue.Visible = false
      FL.CurrentLapLabel.Caption = 'Pit Delta:'
      FL.PitDeltaValue.Visible = true
      getPitEntry()
      startPitDelta()
    elseif inPit == 0 then
      getPitExit()
      local freezeTime = 2000
      if (CurLapMils - pitExit) &lt; freezeTime then
        stopPitDelta()
      else
        startTime = 0
        FL.PitDeltaValue.Visible = false
        FL.CurrentLapLabel.Caption = 'Current Lap:'
        FL.CurrentLapValue.Visible = true
      end
    end
  end
end

function ex()
  CloseCE()
end

</LuaScript>
</CheatTable>
