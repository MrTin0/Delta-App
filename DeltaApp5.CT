<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <Forms>
    <FL Class="TCEForm" Encoding="Ascii85">=L7@6Th)/{PnIRic5r=m0Y*Q2AZZ^!cG9q/K;U{*X]I,ZO47he]XW8sS]@7h(q,*nn4h+uS-%GQ4MtZWY@7s-D@Mt-Ww4a3Yt!(ED2(0?t^Jd439yBbLP%[7[v,m%9bMmNy)h[z/:g](@3^8K?7)iu(pG$L]?FLpDA2xao.%RAbXhFEMOoHb*}a;r(O.}5TeNUzm,pK6IRmk7:ktndeK?3dIgdH28-jXxtJV}Y;hV}[=egoI7O!lK#Y0,rMKBgkR90.Y],F0+wq:zT=eT63uL=*QTf#SJh?R!wdn20Lvnk.ZM=3LfO:]Cujz!DQY1SgT,R*wY,tlk?7oHKD)W+s+T2*gdtVQ*SL6t[E)c?}0MPhNcHyBwSS9:56cHO%S);BNW,8vCn=,WW$1=iu0/MAB^gFL@k[O=ZF[bLe8bDC9M@*]AO:qii_Iq-jdedN:JX5w$o!Qaiqh]%CVroK18fkOD-5RxE4f(;W=BuJ1TL4pJc5,q2FAVGoz2?*hokRU.VgpvaXMJL8GfKC)S(r#@[C6o;+Kz[vnrW:Z6?2Hl!Lm./vF*qe/4aTov^5HmiFg{j*X@M}2?9x651LH:FS7AI}AajS+g.C=%c^z}preoAF=!ovv#$y.y/%xfw+Z6CU9T,d,bj)ceBn-dYA/sXH?kWd/Vmu+]V-jOO#+,a1IpmKG2)Ck{^Sq;kR=W(mlZ4]f6Y#hk/64Z+3S]dYI6!5eul+/KHQ4p_d.BBDbr^]151dj:!!o]zKkvcVh4DXujFP{@3z4?KePF(K3GVf4jA4uwfL@Hw#qsr!j}ghjp*C4]QQo/+pVPVDV7wOiD5o3}3bJ]7]]H-)iIe-lX[PyU1DqcG4C7p(12R_0Z:5H5y9wi]z{]la,_BfW#fm$C4$JYt8kEt]slet;x1Y}/Tp*k^Ge#fRHwor;9f9Q--ve:WvPgEx:XVfA#_zCJSkCZ1#ulIhGA1yWeV7}PixH/6YRiROryt{BT}Y@zjPd(l9OnlFvLb*Kjq%4AzlAYM;jupjub_k7?oJ2n7^8A3QH+a2;I)UeLohDrlexj5SdYN20^r}_Czs;2HWSBKOKS%C#32]Bybj_d82?+O]]H}2cFCA9D.}NvPuVBAyz9Sc9eA2aK52FS+U9-O0uwQA!nmLF2LpNPz@!L@Ovw5j%TxA^[oNo6a)2$-(ClUGKyC?qAvjMl)TAlpuFoe/fjSU9Lv=]hvkmyuq*nSAe.;uT70BIePSA/0uL+!McL-uscx@xRId+,P5{ez1hK(V]e]Je-4{kpbj]PoeyjnC5;onmh]EES?=Pn;H?nRB2+AV))cI[%.tSR8-YNaoyC:X[Gycx?{J@=ac[Df)lR^6#9sI8n$@0I,@tfKKfiMyY}[y+/qC%_S(eenn}/](3(.x^p[!8k::_7Q1E4fNS,pV*c)kTIW$#({M@Y}}wa%)ug+BU}Lt.p_iaJS2JDeHedNK/?t$#wRcaz!.,l.sG^)leH)W,3XuT=.B%$9AN#r5?pYwT9y6)pv.[#3*l%iN7#z-7bbOqe$J2Z2/w3Tz@Ajhy+}wdz^dwn2gZZCwN*Kp[rG$C;VN}t=FAcSK0D]KFh-V^*Q-p..d5y4x^X5Si^KnH){TA#t]ztjD7Q+lf3T[pjK:,-e}vL_]();]k4X=8%?xQV?[rl2o,BKNxgvg![W[L60)*hDpM^L_Xjc2n(WVgMAHei?67{JyEckxtkCzK%4_*6q8reC+0btW4mYg+NePj.v9gF?h34Gn8G2^anFLv1QhfI$85WFR8vtLD-x%MO*++RX.4@kIiBA{D}-H5EOOJmo)X@i+*SUa[9]%Lyf6!3ug]wQqeY$wJVu6cg*]7xEVnGWo+I1VI1tUGZG[yE?bs6_.NflW;0WbOd+@)(*5[Ph;!h[Q}-SqI1u[gNeV#!77%:4UTk;@tM-@)L]C0@_K=kUdW}sUJ/_:!JQ(75}S0@m2+Yz7vdpcKZD*%3e/ouXW:nls#^@j_ytJjQ$60jsp!P90xF)?3AN_#+.5]zh]^;9EkIhXmqaoV_}/2]Y.;hsYwghxw{N:(,OKVGV?}t7Ht3D1h(sU[u8zjpAKX*^rwQ+z)W?L!T3RVS5bm-AnWT?He-H1-)%NVR_2x/ZTAkY5A1V@jT+:*%EMCg0itz1x%x?wT6{]B6WNHJN0SfuKbohC]ty;7^xF^1Qi6E@;,f=G=3NvSlKU.w[m(cpJukZ)IoYw#n:IG]/IA%qIyBnH^u,#jEciOs(rTEH_Ije[emEZp+Zn7pczqVnz+,#4.d}o?/Pha$sl*+J@syh+)G[maz:^s#ldI:iTUM-b.0mD6?Y)hMu.JI^myi!([Is[3IG6Ck1$3O+%/3Zgekj]m$XJ6-o(#8cjCH-:N5,01#qu?Gx8G+s+B-VpHeORgF#w}n((C,^7^=oSjXR21=[oMb/nA%aF*u1(p2;c^m$O}gx2,cX#+W:wLh?%ae85KkzRLB[PW*(]7EwSWT/c%P#b^3z.l9lOAH,CL.M-a*,:KDw^u0Uo8I4cd?NXf(duEHoMt?rb_Ic]MC%vv}h(YPr0GV4pTwvUh1fQ1yy:J.yYeR3JE,P3d-u{Xd^J$WGk/O)xfkI?!uKzrcd#*Io#UWoS!q}(}b^XiO0)9)Hj^Y)Fe[kT-Kcw$f8,G5$3-}h(98VU(ds2)N([=]hw^}eo_E=AIH=nr:^T%mzb7H6jbO6?6-;}7k7YO7)9}CFw],]m1$=i^d:6HcRz/fuCK;lQn:)^/1#J,!nt0R/x^NJ:8_2n^X+3Sh6?ZPNcW:H-rQ0DpXLgg:d=w]z!y//]SZ/d),$;)bp/j=qexxoJC2,k^X9@Ov.,FFFzlllKI3+:vIp_-^D^hA/G9ql@sf^pr5lR+At=d(Hu//G81*({Oge$Hhhf3,)ARf71Iyr%i6#rW?q60HB*nftlM#6Es,L.mcX/D5UqNA^Nkxfi,z5cymv)C=XO?H0kc^CTc};c4jCn}cZ3,(Im2V4saTjM,SrRi9M].:W%O!S@$n5+wc*sQ*w_;vO.lmr)xC[[*hP^qI4pf9(%wE(5/}^5yH?N#Vx*!$q2NV88!Y6aIv4?Ml+E+8jUK@pElAC6jBYHpY/sg1Wv^T8ZEPCbItwe=B[N=s//5]FE9I^eOv#[?C6lE*dj6r^}DQ.WL6WY;bf#.3e7r.YGmjVy!b[db!rbCs_no#EvZ}A@(fuz6tph.QGjH[{L,R0OOC{hJC.oECgsQ:K2q}b@_]k$L;q!8FQ?zhPH8j3B]YQb*5OQ?0$3?po#p:/[?jIcr^#nTI[YDjJEqs]n1VLZu}MTJ,L#zv3]/08sR*CTu1gc8oXYJ(5JR,a#*P/NL}N8!)j6w,x/Kze]dc:,Q@OmqJ,kNJ[ZO[%-]7YbtZYhR_Mnp0c6Y):JJbhJn0kY(}QBq[9Koq[Ia[zx;m0Ep%iL;Q(474BrARWF}:,D1Ac=D+KXG5.0vGAKaWOc4_):^)qgVJjFww0[)Zsd^JavX^fXkhA6T=E)RxYvc]Z1%JBLq%]=GzK?@Lu+J?2#cF@Od-pv.[}6=:HBMB[f#[YF43fX4-WW]92gjyrSMd=lzK4WQwFb[ni8I*Rfrqp8/oJ(V!$Cnf0n]7wa3b9l#MEuHajxrzNu9%5bx:JaIl[{[.ir[bf^][bTMb^!xewz8%S=g25rM14Q,19n-_dsq)=JqPMQ.x${wUM(uC;yda*9PZ}E5sXV@TrIob.u!L,61IKbZ/E@G#{/76/B#aMH#6C?So5h7it$9UzikNFue3O*z/5LS[tFv]]$h7)(qm)GYVf*CKVZBe(u_/Zp%[oJ7xC:@Iu*Ro2Q12.UGIBi!1j4QT!yT#:U^vyd$($Cu;.nIdxDJAz94XIz!qTZ4neKg;azrlCuGgpyfI==ybrk3W+k7*$4*ch1;-f?Q^!Kd]TJjn;%Cs2CfR5r]!bvTh3DKmhHPI^5Bi.jc?MTnZwohPBifUn9p8;J(,ipu=@k__hu69v/alK!]RC0xWS/23enE-H^JDHUFo!;6^JMdj==Qw3,g40!]?}oL6@Q=NU9h@23[c$YkC8on7YXjmx2@8=$M/;j7[?!SnEgXE@qk%gfb5w*wb0tn]6fOW]UaA3;@AW:qIbcI-uVvKZ}YCZOG1An%0KV48HX_,^KFWvdy*L7f[QxZ4PNU$0cF3V:T;l;%-t.nI$(ml1gdE6[2/Y}hxL(Kd64xcZ[yb1I,Xnm2$9V+^hSD5y[3k@npLvj/t1Y+:F2q;h}EA436L$Dw{J0}JqhyT#1QtV2/8SHRF:ellQ{iAmp_EWs*yEX$Qop[(c-MBtrLmg]M}Z.-X-_odDNWv[0MO?JAn9oaoHNLPH,z4$q_7*!MvNigKI7}2JmunqWs;sDf+ql$$b*y+Ynvs/V//+N3OBpew4k:VH}Ixna$fkUZ0;c[zV^xmYL+=^JZ]jGCv{E=-v}7$,$xHs6CWty@%dv[IH36XWF_!.d36lC^Jrq[P+X$YQ;E2WS!i1K/$K:A1[{KDx7Zc(s[ZxGS.HJlc(u=yZ/RF(AlCqtpn[tn,,)xx!NSBEB(,^6s37Uq4CtYl)t7v[IlQQ/]_gl$#X3:XGpwfbsQk.Tz/}@$5RF90ps[tkTLg0+3j1?WBt[xYI]n//hg.fXkPNi$k;CJJP,[QLC%nGUFigfS*{a6V=ia(?e7@D:@r8vKS{c}Qoki?HOSs$2Qa/_.=QEg10K#1K0+5@WiR#vY.4_+inDG9+7B@^Evygqqr()9VD#U]#TgRBet[jc8]1DRo5Az}VzS8hU@Y,IJ+a^?p#+asVD$m:jPx)j$gSZk[8cL3Zhw{bUM/0TosjTtJIbsd8m*Q(/xXh50pvDLDbBoO0;-/GXuX7:+E@l;0ujv)KT2}9QC)U;^xJdbo#eTSX9P0nA7NYPb(ou!dZh]=5^l}!2#]Hm^uX7^eDJ!EEV7-8Wd1RwVKFyuNt,,uxB(8)te4qJW3B!ixt!Jae-HIe0CMa[8k0.NLO(%8zaH;(ePqovc^c3tQD+H(F;L:3y)W3K.4.pyJEh!D]=w(:t.l;5c?BuI.kbjwW(3H)k35I-A,7CxME@cakL^:D^uwgXs+)53Rh#6f)$9{hT@LF)Bqt-a^/D!W:WrhVdmPBu@1Zf%)N^-uqrvmJR)=mY91Xo,yoAxO1Ec9W5:K[.Wc{bH$atP}Kg_*W.C;q8lYKXr0RJzcv}0eR[eR1!I6fnFprm3z0.FDioXhF$Ao)48j-)X#.5pOfKNA)chjS@ue?*8YfEh*U^^_[4Y5!9GB[.o9VEjLsXAHpB1N!CoUy?MB]y-jpAn%{/BI@JpnFEsj!oH1,x%r;iMDjc=dG5DX:6,,M7Es7Fq{]XU^Mnq1)/UlNuH{#+L4pJc5,q2FAVGoz2?*hokRU.V1PKx)NRS^wLJ7gCu=Yv/S/T{JO?-_{dk0+gIp9U8eQ(0H=8@w1((^-7:_jj-nQ4;Vp3$@*v!Co%hANh?[6dWv8]GETBTYy8g8Pi*6Iq,S=B]/ErZ2siK%2=kM!Vu;O0Cammr.sO*FU,G7)xoY.qgAC*H}^tgLe53#]cB=J!Z5IBjj]KRuEcmv_mSPXM4qXgf3._DHkGidp(X+=T1krrg+#$olUus,BvaoH:-Qzp$V7+r3.lA/nBS2kq-X_xl#lt;y6cu+C2)pQ+XwdP22r[4zf{cozv%7Lfh?6=L_iWQ;3IA.HpOt)Dt5G[kFBgR!]arZJ)fRM}xwYqsY?o,ikFo]dFL3WN*X?KE}QDXs+$oAZ_As=RUvSLws{Go^=@QY7m.v,S9QtXJ*ruuczDZllG/WlJ?1KeUP-+r]nU#=Z;j*j.Wb8xt=R:;si-V[O@ibH00W]JFD(a6w?0r,Q*F*OH^Nu*4#J1A/!O:F1.)$f5NZzEg60t#p,PC8?4?tj^tt3K%QFyeHnRRc^T0:@1_*u)?A=zTD{jp0D1TKp,;S?rnf$:A0Z.)2}1z:)RYbJFGk7_s$UxnaZ!EqrQQyP=m{fZQ,;UikTad=;#26fM9dAW/6fh@Q*%9b@{Pm-H]*i0vI)KadZz!cm!q0]WoI9:m%}-4aq[^8J$,b1w*ey*[w{@;l[9hzZGXgGH-3sKp!PaYZ_IZ4JkTDa=V_R6iXAue7r!#vD[Q%H)Y{YZj}e#TmUefk-A6rXhnF/],0AK)[8?70HRJCN^uCkS/V@d-B!p(e1P-+Z#=uJ;;%q!bCd2lzy#sS$8,+vMtm6pH9nSVqu081fgX!CtHGquSfzsU.ZHmManp?GfSF{Z(wS+pz[0rZ#t,zS0E$VjpyEQFT=eB[hTM-SYiOr2[-0ex_4UuhXZ@GN!*VfZKC(IC4xw}!-]EQ/kT^scm6wxZsxIoj:[IRu[t_b!qXX94lGuNq,9xZ?xRae%kb=DArj]9^Q,{WioHO?e,,xaANtq,IvE,tgi7;kFrxY2TW,GB}Zj[.#^JOOo68#$!lvAY7[qp=TVW6@5Art9Hor[nO5ep}wL*5,D9YI@Z(,*ZjXxmvl$zcdh7v3j_]a#/^?(!J{?sYta{t6MaDhSnL:d{}+DQ^VaZ-iTIN-jQgGMM9pA#0p*Fgo7x;%y4kCyN0l.B@:TyISFsO8rPya]LQQMx+L+S;DSe]-mK_bP(WvlVM6$[G}q6PpkYnGy*;#}UWYuzBHz2VJEZE]ifBhnOgM2LnDAD0lNLFvsV7cOX.r(Z=G*^bmy!ON6zPj8;Ah+vtLV;s[.-s9vYKL%7{l#]WPLaqifzm4(3m=cQ*y71x}K/s1Jb?sP3Tw.hot;FN[!$hJN=-p,AD(QWj);JL_7dG.,.+c*P8PEE6TYkiq{z!(r4J6@w)No?)063:X@1pTLpC1olZIz2/dd+jRb[wA8A54Pg.qUk2MXwMT{}1it7E8YUeTFIO^S-;/{Aq$}hZ,+p0,i9LRXig@L#}oU?;I)I}LsAqZzC97z-ItzC#opEqaTym[b1fZhJujMs5}(%{r=Nz,[L$UR-w.r7:JLG0GiM)liZVl)DEN}rZVYY_-q1V58j-]OdGzs3l?K25OuQs1IEixye1y92^Q@EiJkaX!o$8Fb(7rh9yf=xz^u7iZ{9+ZOYs]Rh2NTct(Nh*.urf0T:Go1P,?.#z}]g$?fO+AbHEk37la^5Tej#S[#y8x-G}rugiX;0L/*^@H:!Dl#{c5m9_*STv-v5xZsD0jeI@yiUini[)-:G?3,Jc]?5M+)[c0z/_7h^XtdbJ{w.hQ{X9!$WQ,w9g=SG;hfl7Q%[H4X83gqZ#up.hLe_YB$S:RWMWd(9HzBxx!;2eY,2E;fhtT:!oMx72fMVmI3Fm3UBKt7p:GU+]mhD,8:8Hs4edpzzA^CPnu-v[#JjSH[p4jAEaIK{Q11M)VcpW/p+{@9L48$QbXBY.p*HN-8g{,1#SDbEXzc4(4WH[,UZZW+.yR@F,}IP:O54=[7OA2cYN{!McN@1l:dCE!.X2yksJ9VcJYpDSRWQ:11},%cV=EK3alklBslue:o2IW)X_)AzGGqX(gIO;sH3WL%)Kf0)uIy0G#YzJitMj*nUD}_Z+S5L/J}wr#)M}OObJLU.lo=iOdORFV3[/5bgXr^9I#.(0/WFd_K]6bym^dnrSz*:R#*l%bVK76NFKt-kFA76bHy2Z;WSQNHXm@i36qy=bleuDb]]SQZWL6nu8h01d;4e1(Z%RWztzb$PmCo/8?Zsu:b6DBkwb,N[%hQ!2RS,Qnl4mlKXQddsgHqgH)GUrDMz]QAxIMbsq!BmcY3R^o^[qW(C+2:M=J(fgl@uz-QOxZ}II3CdRN0#LRmQli%w[#*NcHD;,MlM3qP*HHUZ2m0_Amy72P3W6eP,?9%CLkKSwtHp8*cf9:r5(-t}7]qL@fvl1{zfd7)N1o8#Nqdl9:#qX}L?,.e$wb1tV+.(/N07iRli,?#us?MwegLG?75BN^^4_Qp88uz}+VidPme.sdKJUw/^q{yV[{dfne;#A5/e6Zes)9H@#8z,EPV@VZRnxL*=hR).QbjSH)h[yE3$en9dee4,lA_TOEsPVpmhavD[#{DIOuqakiD[]B?pBi{buP)lerZ=p([YkpButwijPbIbNM^C-ZU^/;6uRimt{Ex_x:XJT_EmD00z;Oa*^WE23dN6PhVW7MZ/eL{p2/3ZFQ#gRZx-f-Zd6Wf1NSMwZ9b-hj4UAJ-h}!D4Id;FChnTBxGR:wFu[#{T2ss$sQ%#m1%/90x27z@:QozwZj]+%CTpoY78F1h::Ndz}5(lQ]J8:G8s8zk09R-EloOj{ASn/CBa:HZdNvh#?V#nzm=LM}4wRfT69G$uX2-PX{eswT]qPZ/$SE3{1{:AL.dBa/sTF)XDPveWw$r.j8wl)U30}k0lbm,8H/?#feXFb9XEp*vLX.8:{2FEgr^NtuGe$g%gP$E#Zr6-Lbgt,ZtAVp;QG=i-(yetE#;A;%wpM-5bN$szrm@MGNZcK39Y*lkH)M6KIti8H%Czcc:Z}%oM-oQ-1Bscous85ZYli*v;4?0-MQ%Ywpw;Sx/NFS+daUrme:DWF%8po5Gb(CQ(/_nC]CPZ@_tntNENIr($$PqlUsULpo;Su;p?*;J}bmYLM,plRYs-[BoX7Ntx*)WmTVC4Vd_n^2UX:Fx;c0zaHzZ5V=PEstcf:]63eYeIA(_BtJQwtgjl)[n*Age0Mhy+MQyU2n#=F2[PeZ;a1CIqc/8=1%H(KDi;xZwQA=hvp5cj![W@3HFZnFBl;;</FL>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"pointerscan result"</Description>
      <VariableType>Float</VariableType>
      <Address>"GTA5.exe"+02D5F6E8</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>2A5BB3C0000</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>364</ByteLength>
      <Address>2A519D58278</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>15</ByteLength>
      <Address>GTA5.exe+FE229A</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>188</ByteLength>
      <Address>1F095E71168</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>364</ByteLength>
      <Address>1F095E710B8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FDA90</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Last Check X"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAC8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Last Check Y"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAD0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Last Check Z"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAD8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAE0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FDAE8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDAF0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Next Check X"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB50</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Next Check Y"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB58</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Next Check Z"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB60</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB68</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E42FDB70</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"CurCheck (ID=0)"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FD6C0+11568</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430EC28</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E43052A8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"ID = 1"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430F280</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FD6C0+11880</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"ID = 5"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>283E42FD6C0+13520</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430FF30</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"ID = 2"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>283E430F8D8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>283E430F348</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"No description"</Description>
      <VariableType>Float</VariableType>
      <Address>GTA5.exe+20DC470</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"No description"</Description>
      <VariableType>Float</VariableType>
      <Address>GTA5.exe+20F2364</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"SteamSpeed"</Description>
      <VariableType>Float</VariableType>
      <Address>GTA5.exe+264F684</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>String</VariableType>
      <Length>8</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>14100253998</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>14100253998-A9610+97C60</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>56</ByteLength>
      <Address>14100170000</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>14100170000+D16C0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>141002416C0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"CurLapMils"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>1413115EB00</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"TimesPTR"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>62</ByteLength>
      <Address>1413115ED50</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>PlayerCountPTR</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>141311663B0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>14131170580</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"No description"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>22A20F85518+11550</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>22A20F96A70</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>

--function SetURLs()
--  if TABLE_VERSION == nil then TABLE_VERSION = 18 end
--  version_url = --need to make
--end


--DELTA APP ERROR
openProcess'GTA5.exe'
autoAssemble([[
unregistersymbol(adr)
unregistersymbol(TimesPTR)]])
FL.InitPanel.Visible=true
form_show(FL)
markMyRid = -1
LoadedTime = false
ADR = 0
Metrics = 1
SpeedStatus = 1
Gears = 1
Inputs = 1

function InitOffsets()
  pCNetPlayerInfo = 0xA8 -- A0 98 A8
  pCNetPed = 0x1F0 -- 1E8 1E0 1F0
  oNumPlayers = 0x188 -- 180 178 188
  oRid = 0x098 -- 090 088 098
  pCPed = 0x10 -- 8 0 10
  pCPlayerInfo = 0x10A8 -- 10A8 10A0 10B0
  oCurCheck = 0x11578   --11558 --11830  11110 0x10F48 --119C8 tomo | 11568
  oCurLap = 0x11570   --11828  118280 11108 x10F40 --119C0 tomo | 11560
end

InitOffsets()

--Check player ID

function GetPTRs()
  autoAssemble([[
  aobscanmodule(WorldPTR,GTA5.exe,48 8B 05 ? ? ? ? 45 ? ? ? ? 48 8B 48 08 48 85 C9 74 07)
  registersymbol(WorldPTR)
  aobscanmodule(PlayerCountPTR,GTA5.exe,48 8B 0D ? ? ? ? E8 ? ? ? ? 48 8B C8 E8 ? ? ? ? 48 8B CF)
  registersymbol(PlayerCountPTR)
  aobscanmodule(UnkPTR,GTA5.exe,48 39 3D ? ? ? ? 75 2D)
  registerSymbol(UnkPTR)
  ]])
  addr=getAddress("WorldPTR")
  addr=addr+readInteger(addr+3)+7
  unregisterSymbol("WorldPTR")
  registerSymbol("WorldPTR", addr, true)
  WorldPTR = readQword("WorldPTR")

  addr=getAddress("PlayerCountPTR")
  addr=addr+readInteger(addr+3)+7
  unregisterSymbol("PlayerCountPTR")
  registerSymbol("PlayerCountPTR", addr, true)
  WorldPTR = readQword("PlayerCountPTR")

  UnkPTR=getAddress('UnkPTR') UnkPTR = UnkPTR + readInteger(UnkPTR + 3) + 7
  unregisterSymbol('UnkPTR') registerSymbol('UnkPTR',UnkPTR,true)
  UNK = readQword("UnkPTR")
  end

  function mark_MYRid()
  local contest = getAddressSafe('WorldPTR')

  local ridaddr = "[[[WorldPTR]+pCPed]+pCPlayerInfo]+oRid"

  local testy = readPointer(ridaddr)

  if not testy then
  else
    markMyRid = testy
  end
end

function FoundMyCurrentID()
  local CNetworkPlayerMgr=readPointer("PlayerCountPTR")
  if markMyRid == -1 then mark_MYRid() end
  --Never use goto kids. This isn't my function.
  for i=0,32,1 do
    local CNetGamePlayer = readPointer(CNetworkPlayerMgr + oNumPlayers + (i*8))
    if not CNetGamePlayer then
      goto continue
    end
    local CPlayerInfo = readPointer(CNetGamePlayer + pCNetPlayerInfo)
    if not CPlayerInfo then
      goto continue
    end
    local CPed = readPointer(CPlayerInfo + pCNetPed)
    if not CPed or CPed == 0 then
      goto continue
    end
    local ORGRid = readPointer(CPlayerInfo + oRid)
    if ORGRid == markMyRid then
      MyIDNumber = i
      goto found
    end
    ::continue::
  end
  ::found::
end

function Fetch()
  GetPTRs()
  FoundMyCurrentID()
end

function ActivateApp()
  FL.Enable.Caption = "Activating app"
  FL.InitPanel.Enabled=false
  FL.InitPanel.Visible=false
  FL.StartDetect.Enabled=true
  NewCheckpoint=true
  NewSector=true
  DeltaMils=1
  FirstLap=true
  Enable=false
  LogsEnabled=false
  FL.FormStyle = 'fsSystemStayOnTop'
  Speed = createTimer(nil, false)
  timer_onTimer(Speed, ReadSpeed)
  timer_setInterval(Speed, 50)
  timer_setEnabled(Speed, true)

  previousKersValue = nil
  kersGainedOnLap = 0
  kersUsedOnLap = 0

  Kers = createTimer(nil, false)
  timer_onTimer(Kers, ReadKers)
  timer_setInterval(Kers, 50)
  timer_setEnabled(Kers, true)
end


function InitTrackInfo()
  --Build Sectors
  S1_raw=0
  S2_raw=0
  S3_raw=0
  MaxCheckpoints = readInteger('adr + D3618') --old CBF40 new D 16C0 del prev 97C60 928
  local Track_Name = readString('adr + E5AF0')
  FL.Caption = Track_Name.." DeltaApp by Vi'o'lence"
  CurLapLastCheckpointTime = 0
  LastCheckpoint = 100
  CurrentLapSectors = {}
  FastLapSectors = {}
  if LoadedTime == false then
    for i=0,MaxCheckpoints-1 do
      CurrentLapSectors[i]=0
      FastLapSectors[i]=10000000
    end
    LatestFastLapSectors=10000000
  else
    for i=0,MaxCheckpoints-1 do
      CurrentLapSectors[i]=0
    end
    LatestFastLapSectors=FastLapSectors[0]
    FirstLap=false
  end
  S1 = MaxCheckpoints//3
  S2 = S1 + MaxCheckpoints//3
  S3 = 0
  Fetch()
end

function CloseToTheEnd()
  if CurCheckpoint==MaxCheckpoints-1 and CurLapMils&gt;1000 then
    if NewCheckpoint==true then
      CurrentLapSectors[MaxCheckpoints-1]=CurLapMils
      NewCheckpoint=false
      CanWrite=true
    end
    CurLapLastCheckpointTime=CurLapMils
  end
end

--CloseToTheEnd
function NewC()
  if NewCheckpoint==true and CurCheckpoint&gt;0 then
    if CurCheckpoint ~= MaxCheckpoints-1 then
      CurrentLapSectors[CurCheckpoint]=CurLapMils
      NewCheckpoint=false
    else
      CloseToTheEnd()
    end
    LastCheckpoint=CurCheckpoint
  end
end

--NewC
function Drive()
  if LastCheckpoint ~= CurCheckpoint then
    NewCheckpoint = true
    NewSector=true
    NewC()
  end
end

function NewLapProcedure()
  if CurCheckpoint == 0 and LastCheckpoint ~= 0 and CurLapLastCheckpointTime ~= 0 then
    CurrentLapSectors[0] = CurLapLastCheckpointTime
    --LOGS
    if LogsEnabled == true and CanWrite==true then
      --Record laptime
      LogsLaptime = CurLapLastCheckpointTime
      --Record Sectors
      LogsSector1 = S1_raw
      LogsSector2 = S2_raw
      LogsSector3 = CurLapLastCheckpointTime-S1_raw-S2_raw
      --RecordLap
      CurrentLap = readInteger(ChecksPTR + oCurLap + (MyIDNumber*0x658))
      LogsLap = CurrentLap - 1
      local SpeedTrap = GetSpeed()
      --LogArray=LogArray.."Lap №"..LogsLap..": Lap time - "..LogsLaptime.."\n".." With sectors: S1-"..LogsSector1.." S2-"..LogsSector2.." S3-"..LogsSector3.."\n"
      LogArray = LogArray..LogsLap..", "..LogsLaptime..", "..SpeedTrap..", "..((SpeedTrap/1.6)*10//1/10)..", "..TopSpeed..", "..((TopSpeed/1.6)*10//1/10)..", "..AvgSpeed..", "..((AvgSpeed/1.6)*10//1/10)..", "..LogsSector1..", "..LogsSector2..", "..LogsSector3..", "..kersGainedOnLap..", "..kersUsedOnLap.."\n"
      TopSpeed = 0
      AvgSpeed = nil
      previousKersValue = nil
      kersGainedOnLap = 0
      kersUsedOnLap = 0
      CanWrite = false
    end
      --LOGS
    FirstLap = false
    if CurrentLapSectors[0] &lt; FastLapSectors[0] then
      LatestFastLapSectors = FastLapSectors[0]
      for i=0,MaxCheckpoints-1 do
        FastLapSectors[i] = CurrentLapSectors[i]
      end
    end
  end
end

function UpdateInfo()

  if Enable == true then
    Enable = false
    FL.StartDetect.Caption='START'
    if LogsEnabled ==true then
      PackLogs()
      LogsSwitcher()
    end
    LoadedTime = false
    FL.LoadFLButton.Enabled = false
    FL.LogBuildingButton.Enabled = false
    FL.Caption = "DeltaApp by Vi'o'lence"
  elseif Enable == false then
    UpdateCar()
    InitTrackInfo()
    Enable = true
    FL.StartDetect.Caption='STOP'
    ChecksPTR = getAddress('TimesPTR')
    ForLogs_TrackName=readString('adr + E5AF0') --new E3998 del 3A388 prev A9610
    if LogsEnabled == true then
      CanWrite=false
    end
    LogArray=''
    TopSpeed=0
    AvgSpeed=nil
    previousKersValue = nil
    kersGainedOnLap = 0
    kersUsedOnLap = 0
    FL.LogBuildingButton.Enabled = true
    FL.SaveFLButton.Enabled = true
    FL.LoadFLButton.Enabled = true
  end

  local timer_ps = createTimer()
  timer_ps.Interval = 1
  timer_ps.OnTimer =
  function (ps)

    if Enable == true then
      --Take values
      CurLapMils = readInteger('TimesPTR - 250') --3D0 basic
      --FastLapMils = readInteger('TimesPTR + 11228') --EA10 E960
      CurCheckpoint = readInteger(ChecksPTR + oCurCheck + (MyIDNumber*0x670)) --7598 74E8
      --print(CurCheckpoint)
      FL.LapProgress.Position=(((CurCheckpoint)*100)/MaxCheckpoints)

      --Checks
      Drive()
      CloseToTheEnd()
      NewLapProcedure()

      --Display
      if FirstLap==false then

        if CurCheckpoint==0 then
          DeltaMils=CurrentLapSectors[0]-LatestFastLapSectors
        else
          DeltaMils=CurrentLapSectors[CurCheckpoint]-FastLapSectors[CurCheckpoint]
        end

        if DeltaMils&gt;9999 then

          FL.DeltaLabel.Caption="+ 9.999"
          FL.DeltaLabel.Font.Color=clRed

        elseif DeltaMils&gt;0 then

          if (DeltaMils-1000*(DeltaMils//1000))&lt;10 then
            FL.DeltaLabel.Caption='+'..(DeltaMils//1000)..'.00'..(DeltaMils-1000*(DeltaMils//1000))
          elseif (DeltaMils-1000*(DeltaMils//1000))&lt;100 then
            FL.DeltaLabel.Caption='+'..(DeltaMils//1000)..'.0'..(DeltaMils-1000*(DeltaMils//1000))
          else
            FL.DeltaLabel.Caption='+'..(DeltaMils//1000)..'.'..(DeltaMils-1000*(DeltaMils//1000))
          end
          FL.DeltaLabel.Font.Color=clRed

        elseif DeltaMils&lt;-9999 then

          FL.DeltaLabel.Caption="- 9.999"
          FL.DeltaLabel.Font.Color=clLime

        elseif DeltaMils&lt;0 then

          DeltaMils=DeltaMils*(-1)
          if (DeltaMils-1000*(DeltaMils//1000))&lt;10 then
            FL.DeltaLabel.Caption='-'..(DeltaMils//1000)..'.00'..(DeltaMils-1000*(DeltaMils//1000))
          elseif (DeltaMils-1000*(DeltaMils//1000))&lt;100 then
            FL.DeltaLabel.Caption='-'..(DeltaMils//1000)..'.0'..(DeltaMils-1000*(DeltaMils//1000))
          else
            FL.DeltaLabel.Caption='-'..(DeltaMils//1000)..'.'..(DeltaMils-1000*(DeltaMils//1000))
          end
          FL.DeltaLabel.Font.Color=clLime

        elseif DeltaMils==0 then
          FL.DeltaLabel.Caption="0.000"
          FL.DeltaLabel.Font.Color=clWhite

        end
      end

      --If you read this and trying to understand it, know... you are awesome

      --FREEZE Last Lap
      if CurCheckpoint~=0 then

        local TimeStamp=FastLapSectors[0]

        --Display laptime info
        CalcMins = CurLapMils//60000
        CalcSec = (CurLapMils - (60000*CalcMins))//1000
        CalcMils = (CurLapMils - (CalcMins*60000) - (CalcSec*1000))
        if CalcMils&lt;10 then
          FL.CurrentLapValue.Caption=CalcMins..':'..CalcSec..'.00'..CalcMils
        elseif CalcMils&lt;100 then
          FL.CurrentLapValue.Caption=CalcMins..':'..CalcSec..'.0'..CalcMils
        else
          FL.CurrentLapValue.Caption=CalcMins..':'..CalcSec..'.'..CalcMils
        end

        FCalcMins = TimeStamp//60000
        FCalcSec = (TimeStamp - (60000*FCalcMins))//1000
        FCalcMils = (TimeStamp - 60000*FCalcMins - 1000*FCalcSec)
        if FCalcMils&lt;10 then
          FL.FastestLapValue.Caption=FCalcMins..':'..FCalcSec..'.00'..FCalcMils
        elseif FCalcMils&lt;100 then
          FL.FastestLapValue.Caption=FCalcMins..':'..FCalcSec..'.0'..FCalcMils
        else
          FL.FastestLapValue.Caption=FCalcMins..':'..FCalcSec..'.'..FCalcMils
        end

      elseif CurCheckpoint==0 then

        --NewLapProcedure()
        local TimeStamp=FastLapSectors[0]
        CalculateMins = CurLapLastCheckpointTime//60000
        CalculateSec = (CurLapLastCheckpointTime - (60000*CalculateMins))//1000
        CalculateMils = (CurLapLastCheckpointTime - 60000*CalculateMins - 1000*CalculateSec)
        if CalculateMils&lt;10 then
          FL.CurrentLapValue.Caption=CalculateMins..':'..CalculateSec..'.00'..CalculateMils
        elseif CalculateMils&lt;100 then
          FL.CurrentLapValue.Caption=CalculateMins..':'..CalculateSec..'.0'..CalculateMils
        else
          FL.CurrentLapValue.Caption=CalculateMins..':'..CalculateSec..'.'..CalculateMils
        end

        FCalculateMins = TimeStamp//60000
        FCalculateSec = (TimeStamp - (60000*FCalculateMins))//1000
        FCalculateMils = (TimeStamp - 60000*FCalculateMins - 1000*FCalculateSec)
        if FCalculateMils&lt;10 then
          FL.FastestLapValue.Caption=FCalculateMins..':'..FCalculateSec..'.00'..FCalculateMils
        elseif FCalculateMils&lt;100 then
          FL.FastestLapValue.Caption=FCalculateMins..':'..FCalculateSec..'.0'..FCalculateMils
        else
          FL.FastestLapValue.Caption=FCalculateMins..':'..FCalculateSec..'.'..FCalculateMils
        end

      end

      --Detect Sector's marks
      local TimeSectors=CurLapMils
      if CurCheckpoint == S1 and NewSector==true then
        S1_raw = TimeSectors
        if S3_raw ~= 0 then
          S2_raw=0
          S3_raw=0
        end
        NewSector=false
      elseif CurCheckpoint == S2 and NewSector==true then
        S2_raw = TimeSectors - S1_raw
        NewSector=false
      elseif CurCheckpoint == 0 and S2_raw ~= 0 and S1_raw ~= 0 and NewSector==true then
        S3_raw = CurLapLastCheckpointTime - S1_raw - S2_raw
        NewSector=false
      end

      --Convert milis in time for Sectors
      S1_sec = S1_raw//1000
      S1_mil = S1_raw - 1000*S1_sec

      S2_sec = S2_raw//1000
      S2_mil = S2_raw - 1000*S2_sec

      S3_sec = S3_raw//1000
      S3_mil = S3_raw - 1000*S3_sec

      --Display Sector info

      if S1_mil&lt;10 then
        FL.S1Label.Caption=S1_sec..'.00'..S1_mil
        if S1_mil&lt;100 then
          FL.S1Label.Caption=S1_sec..'.0'..S1_mil
        end
      else
        FL.S1Label.Caption=S1_sec..'.'..S1_mil
      end

      if S2_mil&lt;10 then
        FL.S2Label.Caption=S2_sec..'.00'..S2_mil
        if S2_mil&lt;100 then
          FL.S2Label.Caption=S2_sec..'.0'..S2_mil
        end
      else
        FL.S2Label.Caption=S2_sec..'.'..S2_mil
      end

      if S3_mil&lt;10 then
        FL.S3Label.Caption=S3_sec..'.00'..S3_mil
        if S3_mil&lt;100 then
          FL.S3Label.Caption=S3_sec..'.0'..S3_mil
        end
      else
        FL.S3Label.Caption=S3_sec..'.'..S3_mil
      end

    end
  end
end

--STARTUP FUNCS

function FindAdr()
  FL.Enable.Caption = "Scanning memory 1/3"
  local results = AOBScan('02 00 00 00 ?? 0? 00 00 FF FF FF FF 00 00 00 00 00 00 00 00 ?? 0? 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ?? 0? 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00', '*X*C*W', 2, '000')
  assert(results, 'aobscan failed')
  local addr = results[0]
  results.destroy()
  registerSymbol('adr',addr)
end

function FindTimes()
  FL.Enable.Caption = "Scanning memory 2/3"
  local results = AOBScan('FF FF FF FF 00 00 00 00 00 00 00 00 ?? 0? 00 00 08 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 EC FF FF FF ?? 0?', '-X-C+W', 2, '8')
  assert(results, 'aobscan failed')
  local addr = results[0]
  results.destroy()
  registerSymbol('TimesPTR',addr)
end

function FindCar()
  FL.Enable.Caption = "Scanning memory 3/3"
  autoAssemble([[
  aobscanmodule(WorldPTR,GTA5.exe,48 8B 05 ? ? ? ? 45 ? ? ? ? 48 8B 48 08 48 85 C9 74 07)
  registersymbol(WorldPTR)
  ]])
  addr=getAddress("WorldPTR")
  addr=addr+readInteger(addr+3)+7
  unregisterSymbol("WorldPTR")
  registerSymbol("WorldPTR", addr, true)
  PTR = readQword("WorldPTR")
  --CarNameADR = getAddress("[[[PTR+8]+D10]+20]+298")
  --CarNameCurrent = readString(CarNameADR)
  --284EA541160
end

function UpdateCar()
  if CarNameCurrent ~= readString(CarNameADR) then CarNameCurrent = readString(CarNameADR) end
end

function LogsSwitcher()
  if LogsEnabled == false then
    LogsEnabled=true
    FL.LogBuildingButton.Caption = 'LOGS ON'
    LastElement = 100
  else
    LogsEnabled=false
    FL.LogBuildingButton.Caption = 'LOGS OFF'
  end
end

function PackLogs()
  local ForLogs_TrackName = readString('adr + E5AF0')
  local save_dialog = createSaveDialog(self)
  save_dialog.InitalDir = os.getenv('%USERPROFILE%')
  if save_dialog.execute() then
    local s=(save_dialog.FileName..'.csv')
    file = io.open(s, "a+")
    CurrentDate=os.date("%x")
    file:write(ForLogs_TrackName.."\n")
    file:write(CurrentDate.."\n")
    file:write("Lap, Laptime, Speed_S/F(KPH), Speed_S/F(MPH), TopSpeed(KPH), TopSpeed(MPH), AverageSpeed(KPH), AverageSpeed(MPH), S1, S2, S3, KersGained, KersUsed".."\n")
    file:write(LogArray)
    file:close()
  end
end

function ShowTime()
       local TimeStamp=FastLapSectors[0]
        local FMins = TimeStamp//60000
        FSec = (TimeStamp - (60000*FMins))//1000
        FMils = (TimeStamp - 60000*FMins - 1000*FSec)
        if FMils&lt;10 then
          FL.SaveFLButton.Caption=FMins..':'..FSec..'.00'..FMils
        elseif FMils&lt;100 then
          FL.SaveFLButton.Caption=FMins..':'..FSec..'.0'..FMils
        else
          FL.SaveFLButton.Caption=FMins..':'..FSec..'.'..FMils
        end
end

function RevertCaption()
         FL.SaveFLButton.Caption="SAVE LAP"
end

function SaveFastLap()
  local FLdata = ""
  for i=0,MaxCheckpoints-1 do
      FLdata = FLdata..FastLapSectors[i].."\n"
  end
  local TrackName = readString('adr + E5AF0')
  local save_dialog = createSaveDialog(self)
  save_dialog.InitalDir = os.getenv('%USERPROFILE%')
  if save_dialog.execute() then
    local s=(save_dialog.FileName..'.HOTLAP')
    file = io.open(s, "a+")
    CurrentDate=os.date("%x")
    file:write(TrackName..'\n')
    file:write(FLdata..'\n')
    file:close()
  end
end

function TestFL()
  local FLdata = ""
  for i=0,MaxCheckpoints-1 do
      FLdata = FLdata .. tostring(FastLapSectors[i]).."\n"
  end
  print(FLdata)
end

function LoadFastLap()
     load_dialog = createOpenDialog(self)
     load_dialog.InitalDir = os.getenv('%USERPROFILE%')
     if load_dialog.execute() then
     file = io.open(load_dialog.FileName, "r")
     local Track = tostring(file:read())
     if Track == readString('adr + E5AF0') then
        for i=0,MaxCheckpoints-1 do
            FastLapSectors[i] = tonumber(file:read())
        end
     LoadedTime = true
     end
     end
end

function Startup()
  --StartHotkey = createHotkey(UpdateInfo,VK_DOWN)
  FL.Enable.Enabled = false
  FindAdr()
  FindTimes()
  FindCar()
  ActivateApp()
  if FL.SteamVersion.Checked == true then ADR = 0 end
  if FL.NonSteamVersion.Checked == true then ADR = 1 end
end

function RescanUNK()
    if UNK ~= readQword("UnkPTR") then
      autoAssemble([[
        aobscanmodule(UnkPTR,GTA5.exe,48 39 3D ? ? ? ? 75 2D)
        registerSymbol(UnkPTR)
      ]])
      UnkPTR=getAddress('UnkPTR') UnkPTR=UnkPTR+readInteger(UnkPTR+3)+7
      unregisterSymbol('UnkPTR') registerSymbol('UnkPTR',UnkPTR,true)
      UNK = readQword("UnkPTR")
    end
end

function ShowHideSettings()
  if FL.SettingPanel.Visible == true then
     FL.SettingPanel.Visible = false
     FL.SettingPanel.Enable = false
  else
     FL.SettingPanel.Visible = true
     FL.SettingPanel.Enable = true
  end
end

function ChangeMetrics()
  if Metrics == 1 then
     Metrics = 0
     FL.MetricsTurnOn.Caption = "SPEED: MPH"
  elseif Metrics == 0 then
     Metrics = 1
     FL.MetricsTurnOn.Caption = "SPEED: KPH"
  end
end

function ChangeSpeed()
  if SpeedStatus == 1 then
     SpeedStatus = 0
     FL.SpeedTurnOn.Caption = "SPEED: OFF"
     FL.SpeedLabel.Visible = false
  elseif SpeedStatus == 0 then
     SpeedStatus = 1
     FL.SpeedTurnOn.Caption = "SPEED: ON"
     FL.SpeedLabel.Visible = true
  end
end

function ChangeGears()
  if Gears == 1 then
     Gears = 0
     FL.GearsTurnOn.Caption = "GEARS: OFF"
     FL.GearLabel.Visible = false
  elseif Gears == 0 then
     Gears = 1
     FL.GearsTurnOn.Caption = "GEARS: ON"
     FL.GearLabel.Visible = true
  end
end

function ChangeInputs()
  if Inputs == 1 then
     Inputs = 0
     FL.InputsTurnOn.Caption = "INPUT: OFF"
     FL.Gas.Visible = false
     FL.Brake.Visible = false
     FL.Steer.Visible = false
  elseif Inputs == 0 then
     Inputs = 1
     FL.InputsTurnOn.Caption = "INPUT: ON"
     FL.Gas.Visible = true
     FL.Brake.Visible = true
     FL.Steer.Visible = true
  end
end

function GetKers()
  if ADR == 0 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Speed ~= nil then
      Kers = Kers * 10 //1 /10
      return Kers
    end
  elseif ADR == 1 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Speed ~= nil then
      Kers = Kers * 10 //1 /10
      return Kers
    end
  end
end

function storeGainedKers(value)
  kersGainedOnLap = kersGainedOnLap + value  -- On new lap set value to 0
end

function storeUsedKers(value)
  kersUsedOnLap = kersUsedOnLap + value  -- On new lap set value to 0
end

function defineKersDirection(valuePrv, valueCur)
  if valuePrv &gt; valueCur then storeUsedKers(valuePrv - valueCur)
  elseif valuePrv &lt; valueCur then storeGainedKers(valueCur - valuePrv)
  end
end

function ReadKers()
  local Kers = 0
  if ADR == 0 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Kers ~= nil then
      Kers = Kers * 10 //1 /10
      FL.KersValueTest2.Position = Kers
      FL.KersValueTest.Caption = math.floor(Kers)
      if LogsEnabled == true and Enable == true then
        if previousKersValue ~= nil and previousKersValue ~= Kers then
          defineKersDirection(previousKersValue, Kers)
        end
      end
      previousKersValue = Kers
    end
  elseif ADR == 1 then
    Kers = readFloat("GTA5.exe+1D59B60")
    if Kers ~= nil then
      Kers = Kers * 10 //1 /10
      FL.KersValueTest2.Position = Kers
      FL.KersValueTest.Caption = math.floor(Kers)
      if LogsEnabled == true and Enable == true then
        if previousKersValue ~= nil and previousKersValue ~= Kers then
          defineKersDirection(previousKersValue, Kers)
        end
      end
      previousKersValue = Kers
    end
  end
end

function GetSpeed()
   if ADR == 0 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            return Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             return Speed
         end
       end
    elseif ADR == 1 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            return Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             return Speed
         end
       end
    end
end

function ReadSpeed()
  local Speed = 0
  if SpeedStatus == 1 then
    if ADR == 0 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            FL.SpeedLabel.Caption = "Kph: "..Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             FL.SpeedLabel.Caption = "Mph: "..Speed
         end
         if LogsEnabled == true and Enable == true then
           if Speed &gt; TopSpeed  then TopSpeed = Speed end
           if AvgSpeed == nil then AvgSpeed = Speed
           else AvgSpeed = ((AvgSpeed + Speed)/2)*10//1/10
           end
         end
       end
    elseif ADR == 1 then
       Speed = readFloat("GTA5.exe+2698D6C")
       if Speed ~= nil then
         if Metrics == 1 then
            Speed = Speed * 10 //1 /10
            FL.SpeedLabel.Caption = "Kph: "..Speed
         else
             Speed = Speed/1.6
             Speed = Speed * 10 //1 /10
             FL.SpeedLabel.Caption = "Mph: "..Speed
         end
         if LogsEnabled == true and Enable == true then
           if Speed &gt; TopSpeed  then TopSpeed = Speed end
           if AvgSpeed == nil then AvgSpeed = Speed
           else AvgSpeed = ((AvgSpeed + Speed)/2)*10//1/10
           end
         end
       end
    end
  end

  if Gears == 1 then
     RescanUNK()
     local RPM = readFloat("UNK+E50")
     local Gear = readInteger("UNK+FD4")
     if Gear and RPM then
        if Gear == 0 then FL.GearLabel.Caption = "N" end
        if Gear == 0 and Speed &lt; 0 then FL.GearLabel.Caption = "R" end
        if Gear &gt; 0 then FL.GearLabel.Caption = Gear end
        if RPM &gt; 0.5 then FL.RPM1.Visible = true
           if RPM &gt; 0.7 then FL.RPM2.Visible = true
              if RPM &gt; 0.8 then FL.RPM3.Visible = true
                 if RPM &gt; 0.9 then FL.RPM4.Visible = true
                   if RPM &gt; 0.96 then FL.GearLabel.Font.Color = clRed
                   else FL.GearLabel.Font.Color = clWhite
                   end
                 else FL.RPM4.Visible = false
                 end
              else
                  FL.RPM3.Visible = false
                  FL.RPM4.Visible = false
              end
           else
             FL.RPM2.Visible = false
             FL.RPM3.Visible = false
             FL.RPM4.Visible = false
           end
        else
          FL.RPM1.Visible = false
          FL.RPM2.Visible = false
          FL.RPM3.Visible = false
          FL.RPM4.Visible = false
        end
     end
  else
    FL.RPM1.Visible = false
    FL.RPM2.Visible = false
    FL.RPM3.Visible = false
  end

  if Inputs == 1 then
     local SteerPos = readFloat("UNK+CA8")
     local BrakePos = readFloat("GTA5.exe+25E79BC")
     local ThrottlePos = readFloat("GTA5.exe+25E7974")
     if SteerPos ~= nil then
       if SteerPos &lt; 0 then
          FL.Steer.Position = (((SteerPos * (-1) *50) + 50) // 1)
       elseif SteerPos &gt; 0 then
              FL.Steer.Position = ((50 - (SteerPos *50)) // 1)
       else
           FL.Steer.Position = 50
       end
     end
     FL.Brake.Caption = math.floor(BrakePos * 100)
     FL.Gas.Caption = math.floor(ThrottlePos * 100)
  end

end

function ex()
  --http.destroy()
  CloseCE()
end

</LuaScript>
</CheatTable>
